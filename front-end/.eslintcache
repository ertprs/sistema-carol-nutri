[{"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\index.js":"1","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\App.js":"2","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\services\\history.js":"3","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\context\\AuthContext.js":"4","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\styles\\global.js":"5","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\routes\\index.js":"6","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\services\\api.js":"7","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\routes\\Route.js":"8","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\LandingPage\\index.js":"9","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingUp\\index.js":"10","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingIn\\index.js":"11","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ForgotPassword\\index.js":"12","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesRegister\\index.js":"13","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesEdit\\index.js":"14","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosListagem\\index.js":"15","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ReceitasPublicas\\index.js":"16","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosEdit\\index.js":"17","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosPublicos\\index.js":"18","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\dashboard\\index.js":"19","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\index.js":"20","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesListagem\\index.js":"21","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\artigosRegister\\index.js":"22","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasListagem\\index.js":"23","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasEdit\\index.js":"24","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosRegistrar\\index.js":"25","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasRegister\\index.js":"26","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosListar\\index.js":"27","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\LandingPage\\styles.js":"28","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosListar\\styles.js":"29","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingUp\\styles.js":"30","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingIn\\styles.js":"31","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ForgotPassword\\styles.js":"32","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesRegister\\styles.js":"33","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesEdit\\styles.js":"34","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosListagem\\styles.js":"35","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosPublicos\\styles.js":"36","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosEdit\\styles.js":"37","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ReceitasPublicas\\styles.js":"38","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\styles.js":"39","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesListagem\\styles.js":"40","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\tooltip\\index.js":"41","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\carousel\\index.js":"42","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasRegister\\styles.js":"43","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasEdit\\styles.js":"44","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosRegistrar\\styles.js":"45","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\auth\\index.js":"46","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\default\\index.js":"47","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasListagem\\styles.js":"48","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\AvatarInput\\index.js":"49","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\tooltip\\styles.js":"50","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\artigosRegister\\styles.js":"51","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\auth\\styles.js":"52","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\default\\styles.js":"53","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\AvatarInput\\styles.js":"54","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerAuth\\index.js":"55","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerDefault\\index.js":"56","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\sideBar\\index.js":"57","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\footer\\index.js":"58","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\sideBar\\styles.js":"59","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerDefault\\styles.js":"60","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerAuth\\styles.js":"61","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\footer\\styles.js":"62","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\dashboard\\styles.js":"63","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoEdit\\index.js":"64","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoEdit\\styles.js":"65","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoPublico\\index.js":"66","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoPublico\\styles.js":"67"},{"size":253,"mtime":1607235005692,"results":"68","hashOfConfig":"69"},{"size":571,"mtime":1609372001637,"results":"70","hashOfConfig":"69"},{"size":116,"mtime":1609371979041,"results":"71","hashOfConfig":"69"},{"size":2514,"mtime":1607235005689,"results":"72","hashOfConfig":"69"},{"size":699,"mtime":1609719265557,"results":"73","hashOfConfig":"69"},{"size":3174,"mtime":1610498265928,"results":"74","hashOfConfig":"69"},{"size":142,"mtime":1610421674127,"results":"75","hashOfConfig":"69"},{"size":847,"mtime":1607235005759,"results":"76","hashOfConfig":"69"},{"size":4792,"mtime":1610549022559,"results":"77","hashOfConfig":"69"},{"size":2321,"mtime":1609727488152,"results":"78","hashOfConfig":"69"},{"size":1458,"mtime":1607235005702,"results":"79","hashOfConfig":"69"},{"size":1588,"mtime":1607235005735,"results":"80","hashOfConfig":"69"},{"size":2572,"mtime":1608690531735,"results":"81","hashOfConfig":"69"},{"size":59454,"mtime":1610757481195,"results":"82","hashOfConfig":"69"},{"size":3865,"mtime":1610386055965,"results":"83","hashOfConfig":"69"},{"size":3953,"mtime":1609714940557,"results":"84","hashOfConfig":"69"},{"size":4817,"mtime":1609720646303,"results":"85","hashOfConfig":"69"},{"size":3868,"mtime":1609715588603,"results":"86","hashOfConfig":"69"},{"size":611,"mtime":1610468181882,"results":"87","hashOfConfig":"69"},{"size":4221,"mtime":1610391403819,"results":"88","hashOfConfig":"69"},{"size":4027,"mtime":1610465078556,"results":"89","hashOfConfig":"69"},{"size":2053,"mtime":1609715831113,"results":"90","hashOfConfig":"69"},{"size":3951,"mtime":1609711692276,"results":"91","hashOfConfig":"69"},{"size":4951,"mtime":1609720630244,"results":"92","hashOfConfig":"69"},{"size":2026,"mtime":1610499940205,"results":"93","hashOfConfig":"69"},{"size":2256,"mtime":1609705474537,"results":"94","hashOfConfig":"69"},{"size":4856,"mtime":1610499942999,"results":"95","hashOfConfig":"69"},{"size":5813,"mtime":1610551619901,"results":"96","hashOfConfig":"69"},{"size":3348,"mtime":1610467123253,"results":"97","hashOfConfig":"69"},{"size":1538,"mtime":1607235005713,"results":"98","hashOfConfig":"69"},{"size":1748,"mtime":1607235005706,"results":"99","hashOfConfig":"69"},{"size":1847,"mtime":1607235005738,"results":"100","hashOfConfig":"69"},{"size":1804,"mtime":1608691066354,"results":"101","hashOfConfig":"69"},{"size":5004,"mtime":1609710134778,"results":"102","hashOfConfig":"69"},{"size":3984,"mtime":1610465790964,"results":"103","hashOfConfig":"69"},{"size":3984,"mtime":1610465800535,"results":"104","hashOfConfig":"69"},{"size":5620,"mtime":1610465784733,"results":"105","hashOfConfig":"69"},{"size":3985,"mtime":1610465855971,"results":"106","hashOfConfig":"69"},{"size":2197,"mtime":1609719300913,"results":"107","hashOfConfig":"69"},{"size":3986,"mtime":1610465725987,"results":"108","hashOfConfig":"69"},{"size":192,"mtime":1607374076083,"results":"109","hashOfConfig":"69"},{"size":2192,"mtime":1610505507735,"results":"110","hashOfConfig":"69"},{"size":2256,"mtime":1609705383344,"results":"111","hashOfConfig":"69"},{"size":5657,"mtime":1610465838069,"results":"112","hashOfConfig":"69"},{"size":2312,"mtime":1610244487590,"results":"113","hashOfConfig":"69"},{"size":361,"mtime":1607235005716,"results":"114","hashOfConfig":"69"},{"size":448,"mtime":1609442711156,"results":"115","hashOfConfig":"69"},{"size":3985,"mtime":1610465844445,"results":"116","hashOfConfig":"69"},{"size":1349,"mtime":1610391403817,"results":"117","hashOfConfig":"69"},{"size":814,"mtime":1607398969597,"results":"118","hashOfConfig":"69"},{"size":2356,"mtime":1610230018857,"results":"119","hashOfConfig":"69"},{"size":270,"mtime":1610465746695,"results":"120","hashOfConfig":"69"},{"size":269,"mtime":1610465754865,"results":"121","hashOfConfig":"69"},{"size":502,"mtime":1609815160400,"results":"122","hashOfConfig":"69"},{"size":1371,"mtime":1610502673578,"results":"123","hashOfConfig":"69"},{"size":2442,"mtime":1609372547099,"results":"124","hashOfConfig":"69"},{"size":2873,"mtime":1609815160393,"results":"125","hashOfConfig":"69"},{"size":1105,"mtime":1610247586839,"results":"126","hashOfConfig":"69"},{"size":1438,"mtime":1610586056564,"results":"127","hashOfConfig":"69"},{"size":1067,"mtime":1607235005679,"results":"128","hashOfConfig":"69"},{"size":3239,"mtime":1610551405994,"results":"129","hashOfConfig":"69"},{"size":976,"mtime":1607389955967,"results":"130","hashOfConfig":"69"},{"size":481,"mtime":1610468189202,"results":"131","hashOfConfig":"69"},{"size":4118,"mtime":1610500115033,"results":"132","hashOfConfig":"69"},{"size":3810,"mtime":1610472634807,"results":"133","hashOfConfig":"69"},{"size":4662,"mtime":1610552666517,"results":"134","hashOfConfig":"69"},{"size":3934,"mtime":1610553241140,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"kkvn1y",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"138"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"138"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"138"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"138"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"138"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"138"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"138"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"138"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"138"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"138"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\index.js",[],["290","291"],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\App.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\services\\history.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\context\\AuthContext.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\styles\\global.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\routes\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\services\\api.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\routes\\Route.js",["292"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../context/AuthContext'\r\n\r\nimport AuthLayout from '../pages/_layouts/auth'\r\nimport DefaltLayout from '../pages/_layouts/default'\r\n\r\nexport default function RouteWrapper({\r\n    component: Component, \r\n    isPrivate = false,\r\n    ... rest\r\n}) {\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    if(!user && isPrivate){\r\n        return <Redirect to=\"/signin\" />\r\n    }\r\n\r\n    if(user && !isPrivate){\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    let Layout = user ? DefaltLayout : AuthLayout\r\n\r\n    return (\r\n        <Route { ... rest}\r\n            render={props => (\r\n                <Layout>\r\n                    <Component {... props} />\r\n                </Layout>  \r\n            )}\r\n        />\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\LandingPage\\index.js",["293","294","295"],"import React from 'react';\r\nimport './styles.js'\r\n\r\nimport Carousel_ from '../../components/carousel/index'\r\nimport logo from '../../assets/logo-completa.svg'\r\nimport foto1 from '../../assets/carol-nutri-maca.jpg'\r\nimport foto2 from '../../assets/carol-nutri.jpg'\r\nimport foto3 from '../../assets/nutri1.jpg'\r\nimport foto4 from '../../assets/nutri2.jpg'\r\nimport foto5 from '../../assets/Loc.jpg'\r\nimport foto6 from '../../assets/Loc1.jpg'\r\nimport Logo1 from '../../assets/logo.svg'\r\nimport Logo2 from '../../assets/logo_insta.png'\r\nimport { GoLocation } from \"react-icons/go\";\r\n\r\nimport {Container} from './styles'\r\n\r\nexport default function LandingPage(){\r\n    return (\r\n        <div>\r\n            <Carousel_/>\r\n                <Container>\r\n                    <div className=\"content1\">\r\n                        <img src={logo} alt=\"Carol-nutricionista\"/>\r\n                        <div className=\"conteudo\">\r\n                            <h1>Sobre Carol</h1>\r\n                            <p> Sou Carol Bernardino, tenho 22 anos e escolhi cuidar do próximo através do\r\n                                alimento desde os 17 anos quando ingressei no curso de nutrição. Atuo na\r\n                                área clínica e esportiva (pós graduanda na mesma área), acolhendo cada\r\n                                paciente com muito amor e afeto, abraçando cada objetivo individualmente e\r\n                                segurando a mão para percorrer o melhor trajeto para o resultado. No lindo\r\n                                laço formado por Nutricionista e paciente, me transbordo e vibro cada\r\n                                conquista como se fosse minha.\r\n                            </p>\r\n                            <p>\r\n                                “É o invisível que produz o visível”. Ao longo dos quatro anos de graduação\r\n                                pude moldar o meu interior, esse invisível tão importante para demonstração do\r\n                                amor pelo cuidado e pela profissão que escolhi, que tem sido intensificado na\r\n                                convivência com todos que optam por ser do meu time.\r\n                            </p>\r\n                            <p>\r\n                            Agradeço a confiança no meu trabalho e reafirmo: No <strong>#TeamCarol</strong> o amor é\r\n                            transmitido através do alimento!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"insta\"  href=\"https://www.instagram.com/carolbl_/?hl=pt-br\" target=\"_blank\">\r\n                        <nav>\r\n                            <img src={Logo2} alt=\"Carol-nutricionista\"/>\r\n                        </nav>\r\n                        <div className=\"perfil\" >\r\n                            <img src={foto4} alt=\"Carol-nutricionista\"/>\r\n                            <div className=\"cabec\">\r\n                                <span>carolbl_</span>\r\n                                <p>siga-nos no instagram e venha participar do <strong>#TeamCarol</strong></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"images\">\r\n                            <img src={foto1} alt=\"Carol-nutricionista\"/>\r\n                            <img src={foto2} alt=\"Carol-nutricionista\"/>\r\n                            <img src={foto3} alt=\"Carol-nutricionista\"/>\r\n                        </div>\r\n                    </a>\r\n                    <a className=\"loc\" href=\"https://www.google.com/maps/place/Oral+Center+-+ODONTOLOGIA+ESPECIALIZADA/@-6.4826169,-35.4323927,17z/data=!4m5!3m4!1s0x7ad8e4ad12fbb49:0xb6d312bea769e7dd!8m2!3d-6.4825423!4d-35.4326663?hl=pt-BR\" target=\"_blank\">\r\n                        <div className=\"cabecLoc\">\r\n                            <div className=\"title\">\r\n                                <img src={Logo1} alt=\"Carol Nutri\"/>\r\n                                <h1>Localização</h1>\r\n                            </div>\r\n                            <div className=\"end\">\r\n                                <GoLocation size={26}/>\r\n                                <strong>Oral Center - ODONTOLOGIA ESPECIALIZADA</strong>\r\n                                <p>R. Assis Chateaubriand, 1067 - São Sebastião, Nova Cruz - RN, 59215-000</p>\r\n                                <span>(84) 3281-2654</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"imagesLoc\">\r\n                            <img src={foto5} alt=\"Carol-nutricionista\"/>\r\n                            <img src={foto6} alt=\"Carol-nutricionista\"/>\r\n                        </div>\r\n                    </a>\r\n\r\n                </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingUp\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingIn\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ForgotPassword\\index.js",["296"],"import React, { useContext } from 'react';\r\nimport { Form, Input } from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\nimport {toast} from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport logo from '../../assets/logo-branca.svg'\r\nimport { Wrapper, Content } from './styles'\r\n\r\nimport api from '../../services/api'\r\n\r\nconst schema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(\"Insira um e-mail válido!\")\r\n        .required(\"O e-mail é obrigatório!\")\r\n})\r\n\r\n\r\nexport default function ForgotPassword(){\r\n\r\n    var history = useHistory()\r\n    \r\n    async function handlesubmit(data){\r\n        await api.post('auth/forgot_password'  ,{\r\n            email: data.email,\r\n        }).then((response) => {\r\n\r\n            toast.success('Token enviado. Verifique sua caixa de e-mail.')\r\n            history.push('/signin')\r\n\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Wrapper>\r\n                <Content>\r\n                    <img src={logo} alt=\"Carol-nutricionista\"/>\r\n\r\n                    <Form schema={schema} onSubmit={handlesubmit}>\r\n                        <p>Informe seu e-mail para enviarmos um token para a recuperação da senha.</p>\r\n                        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\r\n\r\n                        <button type=\"submit\">Enviar</button>\r\n                    </Form>\r\n                </Content>\r\n            </Wrapper>\r\n        </>\r\n    )\r\n\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesRegister\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesEdit\\index.js",["297","298","299","300","301","302"],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosListagem\\index.js",["303","304","305"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\r\n\r\nimport {Container, Formulario, Artigo, Loading} from './styles'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Artigos(){\r\n    const [artigos, setArtigo] = useState([]);\r\n    const [busca, setBusca] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Objeto mutavel\r\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\r\n\r\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get('artigo/list').then((response) => {\r\n            setArtigo(response.data?.docs)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            setLoading(false)\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        }) \r\n    },[cb])\r\n\r\n    function onChange(event) {\r\n        setBusca(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        setLoading(true)\r\n        if(busca == ''|| busca == undefined){\r\n            api.get('artigo/list').then((response) => {\r\n                setArtigo(response.data.docs)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        } else {\r\n            api.get(`artigo/listName/${busca}`).then((response) => {\r\n                setArtigo(response.data)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <img src={Logo} alt=\"Carol Nutri\"/>\r\n                <h1>Explore a lista de artigos.</h1>\r\n            </Container>\r\n\r\n            <Formulario>\r\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\r\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\r\n                <Link>\r\n                    <div>\r\n                        <Link to=\"/registrar-artigo\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar novo artigo.\"/>\r\n                        </Link>\r\n                    </div>\r\n                </Link>\r\n            </Formulario>\r\n\r\n            {artigos.map(artigo => (\r\n                \r\n                <Artigo>\r\n                    <Link key={String(artigo._id)}  to={`/artigo/${artigo._id}`}>\r\n                        <div>\r\n                            <div className=\"conteudo\">\r\n                                <strong>{artigo.title}</strong>\r\n                                <p>{artigo.description}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FiChevronRight size={20}/>\r\n                    </Link>\r\n                </Artigo>\r\n            ))}\r\n        </>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ReceitasPublicas\\index.js",["306","307","308","309","310"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\r\nimport ReactLoading from 'react-loading'\r\n\r\nimport {Container, Formulario, Receita, Loading} from './styles'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\n\r\nexport default function Receitas(){\r\n    const [receitas, setReceitas] = useState([]);\r\n    const [busca, setBusca] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Objeto mutavel\r\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\r\n\r\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get('receitas/list').then((response) => {\r\n            setReceitas(response.data.docs)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            setLoading(false)\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        }) \r\n    },[cb])\r\n\r\n    function onChange(event) {\r\n        setBusca(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        setLoading(true)\r\n        if(busca == ''|| busca == undefined){\r\n            api.get('receitas/list').then((response) => {\r\n                setReceitas(response.data.docs)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        } else {\r\n            api.get(`receitas/listName/${busca}`).then((response) => {\r\n                setReceitas(response.data)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <img src={Logo} alt=\"Carol Nutri\"/>\r\n                <h1>Explore a lista de receitas.</h1>\r\n            </Container>\r\n\r\n            <Formulario>\r\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\r\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\r\n                <Link>\r\n                    <div>\r\n                        <Link to=\"/registrar-receita\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar novo usuário.\"/>\r\n                        </Link>\r\n                    </div>\r\n                </Link>\r\n            </Formulario>\r\n\r\n            {receitas.map(receita => (\r\n                \r\n                <Receita>\r\n                    <a key={String(receita._id)}  href={receita.link} target=\"_blank\">\r\n                        <img src={receita.image}/>\r\n                        <div>\r\n                            <div className=\"conteudo\">\r\n                                <strong>{receita.title}</strong>\r\n                                <p>{receita.description}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FiChevronRight size={20}/>\r\n                    </a>\r\n                </Receita>\r\n            ))}\r\n        </>\r\n    )\r\n    \r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosEdit\\index.js",["311","312","313"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport { FiChevronLeft,  FiChevronRight } from 'react-icons/fi'\r\nimport { AiOutlineClose, AiFillEdit } from \"react-icons/ai\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Input, Textarea } from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\n\r\nimport api from '../../services/api'\r\nimport {Return, ArtigoInfo, Container, Editor} from './styles'\r\nimport Tooltip from '../../components/tooltip/index'\r\n\r\nexport default function Artigo(){\r\n\r\n    var history = useHistory()\r\n\r\n    const { params } = useRouteMatch();\r\n\r\n    const [artigo, setArtigo] = useState([]);\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    useEffect(async () => {\r\n        api.get(`artigo/list/${params.artigo}`).then((response) => {\r\n            setArtigo(response.data)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    },[params.artigo])\r\n\r\n    async function handClick(){\r\n        console.log('entrou na função')\r\n        await api.delete(`artigo/delete/${artigo._id}` ,{\r\n        }).then(() => {\r\n            toast.success('Receita excluída!')\r\n            history.push('/artigos')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    }\r\n\r\n    const schema = Yup.object().shape({\r\n\r\n        title: Yup.string()\r\n            .required(\"Titulo é obrigatório!\"),\r\n    \r\n        description: Yup.string()\r\n            .required(\"Descrição é obrigatória!\"),\r\n    \r\n        link: Yup.string()\r\n            .required(\"Link é um campo obrigatório!\"),\r\n    \r\n    })\r\n\r\n    async function handlSubmit(data) {\r\n        console.log(data)\r\n        \r\n        await api.put(`artigo/edit/${artigo._id}` ,{ \r\n            title: data.title,\r\n            description: data.description,\r\n            link: data.link,\r\n         }).then(async () => {\r\n             toast.success('Artigo atualizado')\r\n             history.push('/artigos')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n\r\n    }\r\n    \r\n    async function handleClick(){\r\n        setEdit(false == edit)\r\n        if(edit){\r\n            toast.info('Campos de edição habilitado')\r\n        } else {\r\n            toast.info('Campos de edição desabilitado')\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n        <Return>\r\n            <Link to=\"/artigos\">\r\n                <FiChevronLeft/>\r\n                Voltar\r\n            </Link>\r\n        </Return>\r\n\r\n        <ArtigoInfo>\r\n            <h1>Informações do artigo</h1>\r\n            <header>\r\n                <div>\r\n                    <strong>\r\n                        {artigo.title}\r\n                    </strong>\r\n                    <p>\r\n                        {artigo.description}\r\n                    </p>\r\n                </div>\r\n            </header>\r\n            <div className=\"botoes\">\r\n                <a href={artigo.link} target=\"_blank\">ver<FiChevronRight/></a>\r\n                <button onClick={handClick} type=\"button\">Excluir <AiOutlineClose size={20} /></button>\r\n            </div>\r\n            <hr/>\r\n        </ArtigoInfo>\r\n        <Editor>\r\n            <div>\r\n                <h2>Editar artigo</h2>\r\n                <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos para edição\"/></button>\r\n            </div>\r\n\r\n            <Form schema={schema} onSubmit={handlSubmit} initialData={artigo}>\r\n                {\r\n                    edit ? <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" disabled /> : <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" />\r\n                }\r\n                {\r\n                    edit ? <Input label=\"Titulo do artigo\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\" disabled/> : <Input label=\"Titulo do artigo\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\"/>\r\n                }\r\n                {\r\n                    edit ?  <Textarea rows=\"4\" label=\"Descrição sobre o artigo\" name=\"description\" placeholder=\"Informe um breve descrição sobre artigo\" disabled/> : <Textarea rows=\"4\" label=\"Descrição sobre o artigo\" name=\"description\" placeholder=\"Informe um breve descrição sobre artigo\" />\r\n                }\r\n                {\r\n                    edit ? <button disabled>Desabilitado</button> : <button onSubmit={e => { e.preventDefault()}} type=\"submit\" >Atualizar dados</button>\r\n                }\r\n            </Form>\r\n        </Editor>\r\n    </Container>\r\n    )\r\n\r\n\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosPublicos\\index.js",["314","315","316","317"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\r\n\r\nimport {Container, Formulario, Artigo, Loading} from './styles'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\n\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Artigos(){\r\n\r\n    const [artigos, setArtigo] = useState([]);\r\n    const [busca, setBusca] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Objeto mutavel\r\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\r\n\r\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get('artigo/list').then((response) => {\r\n            setArtigo(response.data.docs)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            setLoading(false)\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        }) \r\n    },[cb])\r\n\r\n    function onChange(event) {\r\n        setBusca(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        setLoading(true)\r\n        if(busca == ''|| busca == undefined){\r\n            api.get('artigo/list').then((response) => {\r\n                setArtigo(response.data.docs)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        } else {\r\n            api.get(`artigo/listName/${busca}`).then((response) => {\r\n                setArtigo(response.data)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <img src={Logo} alt=\"Carol Nutri\"/>\r\n                <h1>Explore a lista de artigos.</h1>\r\n            </Container>\r\n\r\n            <Formulario>\r\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\r\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\r\n                <Link>\r\n                    <div>\r\n                        <Link to=\"/registrar-artigo\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar novo artigo.\"/>\r\n                        </Link>\r\n                    </div>\r\n                </Link>\r\n            </Formulario>\r\n\r\n            {artigos.map(artigo => (\r\n                \r\n                <Artigo>\r\n                    <a key={String(artigo._id)} href={artigo.link} target=\"_blank\" >\r\n                        <div>\r\n                            <div className=\"conteudo\">\r\n                                <strong>{artigo.title}</strong>\r\n                                <p>{artigo.description}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FiChevronRight size={20}/>\r\n                    </a>\r\n                </Artigo>\r\n            ))}\r\n        </>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\dashboard\\index.js",["318","319"],"import React, { useState} from 'react';\r\n\r\nimport {Container} from './styles.js'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Dashboard(){\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    if (loading){\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <div>\r\n                        <img src={Logo} alt=\"Carol Nutri\"/>\r\n                        <h1>Construção da página em andamento</h1>\r\n                    </div>\r\n                </Container>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    \r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\index.js",["320"],"import React, {useContext, useState} from 'react';\r\n\r\nimport { Container } from './styles'\r\nimport { Form, Input } from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\nimport {toast} from 'react-toastify'\r\n\r\nimport {AiFillEdit} from 'react-icons/ai'\r\n\r\nimport {AuthContext} from '../../context/AuthContext'\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport api from '../../services/api'\r\nimport AvatarInput from './AvatarInput'\r\n\r\nconst schema = Yup.object().shape({\r\n\r\n    name: Yup.string()\r\n        .required(\"O nome é obrigatório!\"),\r\n\r\n    email: Yup.string()\r\n        .email(\"Insira um e-mail válido!\")\r\n        .required(\"O e-mail é obrigatório!\"),\r\n\r\n    phone: Yup.string()\r\n        .required(\"Número de telefone é obrigatório!\"),\r\n\r\n    password: Yup.string()\r\n        .required(\"A senha é obrigatória!\"),\r\n\r\n    NewPassword: Yup.string()\r\n        .required(\"Campo obrigatório!\"),\r\n\r\n    ConfirmeNewpassword: Yup.string()\r\n        .required(\"Campo obrigatório!\"),\r\n})\r\n\r\nexport default function Profile(){\r\n\r\n    const { user } = useContext(AuthContext)\r\n    const { update } = useContext(AuthContext)\r\n\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    async function handlSubmit(data) {\r\n        await api.put(`user/userUp/${user._id}` ,{\r\n            name: data.name,\r\n            email: data.email,\r\n            phone: data.phone,\r\n        }).then(() => {\r\n            update({\r\n                email: data.email,\r\n                password: data.password\r\n            })\r\n            toast.success('Perfil atualizado.')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n\r\n    }\r\n\r\n    async function onChange(event){\r\n        event.target.value = event.target.value\r\n            .replace(/\\D/g,'')\r\n            .replace(/(\\d{0})(\\d)/, '$1($2')\r\n            .replace(/(\\d{2})(\\d)/, '$1) $2 ')\r\n            .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n    }\r\n\r\n    async function handleClick(){\r\n        setEdit(false == edit)\r\n        if(edit){\r\n            toast.info('Campos de edição habilitado')\r\n        } else {\r\n            toast.info('Campos de edição desabilitado')\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div>\r\n                    <h1>Editar informações</h1>\r\n                    <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos de edição\"/></button>\r\n                </div>\r\n                <Form schema={schema} initialData={user} onSubmit={handlSubmit}>\r\n\r\n                    <AvatarInput name=\"avatar\" />\r\n\r\n                    {\r\n                        edit ? <Input label=\"Nome e sobrenome\" name=\"name\" placeholder=\"Nome e sobrenome\" disabled/> : <Input label=\"Nome e sobrenome\" name=\"name\" placeholder=\"Nome e sobrenome\"/>\r\n                    }\r\n                    {\r\n                        edit ? <Input label=\"E-mail\" type=\"email\" name=\"email\" placeholder=\"Nome e sobrenome\" disabled/> :<Input label=\"E-mail\" type=\"email\" name=\"email\" placeholder=\"Nome e sobrenome\"/>\r\n                    }\r\n                    {\r\n                        edit ? <Input label=\"Telefone\" onChange={onChange} name=\"phone\" maxLength=\"16\" type=\"text\" disabled/> : <Input label=\"Telefone\" onChange={onChange} maxLength=\"16\" type=\"text\" name=\"phone\"/>\r\n                    }\r\n                    <hr/>\r\n                    <Input label=\"Nova Senha\" type=\"password\" name=\"NewPassword\" maxLength=\"12\" minLength=\"8\" placeholder=\"Mínimo 8 caracteres e máximo  12 caracters\" />\r\n                    <Input label=\"Confirme nova senha\" type=\"password\" name=\"ConfirmeNewpassword\" minLength=\"8\" maxLength=\"12\" placeholder=\"Mesma senha do campo anterior\" />\r\n                    <hr/>\r\n                    <Input label=\"Senha atual\" type=\"password\" name=\"password\" maxLength=\"12\" minLength=\"8\" placeholder=\"Necessario para validar as modificações\" />\r\n                    {\r\n                        edit ? <button disabled>Desabilitado</button> : <button type=\"submit\">Atualizar perfil</button>\r\n                    }\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesListagem\\index.js",["321","322","323","324"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\r\n\r\nimport {Container, Formulario, Paciente, Loading} from './styles'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Pacientes(){\r\n    const [pacientes, setPacientes] = useState([]);\r\n    const [busca, setBusca] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Objeto mutavel\r\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\r\n\r\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get('/user/users').then((response) => {\r\n            setPacientes(response.data.docs)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        }) \r\n    },[cb])\r\n\r\n    function onChange(event) {\r\n        setBusca(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        setLoading(true)\r\n        if(busca == ''|| busca == undefined){\r\n            api.get('/user/users').then((response) => {\r\n                setPacientes(response.data.docs)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        } else {\r\n            api.get(`user/userName/${busca}`).then((response) => {\r\n                setPacientes(response.data)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <img src={Logo} alt=\"Carol Nutri\"/>\r\n                <h1>Explore a lista dos pacientes.</h1>\r\n            </Container>\r\n\r\n            <Formulario onSubmit={e => { e.preventDefault()}}>\r\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\r\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\r\n                <div>\r\n                    <Link to=\"/registrar-paciente\">\r\n                        <AiFillPlusCircle size={60}/>\r\n                        <Tooltip texto=\"Cadastrar novo usuário.\"/>\r\n                    </Link>\r\n                </div>\r\n            </Formulario>\r\n\r\n            {pacientes.map(paciente => (\r\n                \r\n                <Paciente>\r\n                    <Link key={String(paciente._id)}  to={`/paciente/${paciente._id}`}>\r\n                        <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\r\n                        <div>\r\n                            <div className=\"conteudo\">\r\n                                <strong>{paciente.name}</strong>\r\n                                <p>{paciente.email}</p>\r\n                                <span>{paciente.status}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FiChevronRight size={20}/>\r\n                    </Link>\r\n                </Paciente>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\artigosRegister\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasListagem\\index.js",["325","326","327","328"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport {FiChevronRight} from 'react-icons/fi'\r\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\r\n\r\nimport {Container, Formulario, Receita, Loading} from './styles'\r\nimport Logo from '../../assets/logo-branca.svg'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Receitas(){\r\n    const [receitas, setReceitas] = useState([]);\r\n    const [busca, setBusca] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //Objeto mutavel\r\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\r\n\r\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get('receitas/list').then((response) => {\r\n            setReceitas(response.data.docs)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            setLoading(false)\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        }) \r\n    },[cb])\r\n\r\n    function onChange(event) {\r\n        setBusca(event.target.value)\r\n    }\r\n\r\n    function handleClick(){\r\n        setLoading(true)\r\n        if(busca == ''|| busca == undefined){\r\n            api.get('receitas/list').then((response) => {\r\n                setReceitas(response.data?.docs)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        } else {\r\n            api.get(`receitas/listName/${busca}`).then((response) => {\r\n                setReceitas(response?.data)\r\n                setLoading(false)\r\n                toast.success('Lista atualizada.')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request?.response)\r\n                toast.error(erro.error)\r\n                setLoading(false)\r\n            }) \r\n        }\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                <img src={Logo} alt=\"Carol Nutri\"/>\r\n                <h1>Explore a lista de receitas.</h1>\r\n            </Container>\r\n\r\n            <Formulario>\r\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\r\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\r\n                <Link>\r\n                    <div>\r\n                        <Link to=\"/registrar-receita\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar novo usuário.\"/>\r\n                        </Link>\r\n                    </div>\r\n                </Link>\r\n            </Formulario>\r\n\r\n            {receitas.map(receita => (\r\n                \r\n                <Receita>\r\n                    <Link key={String(receita._id)}  to={`/receita/${receita._id}`}>\r\n                        <img src={receita.image}/>\r\n                        <div>\r\n                            <div className=\"conteudo\">\r\n                                <strong>{receita.title}</strong>\r\n                                <p>{receita.description}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <FiChevronRight size={20}/>\r\n                    </Link>\r\n                </Receita>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasEdit\\index.js",["329","330","331","332","333"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport { FiChevronLeft,  FiChevronRight } from 'react-icons/fi'\r\nimport { AiOutlineClose, AiFillEdit } from \"react-icons/ai\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Input, Textarea } from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\n\r\nimport api from '../../services/api'\r\nimport {Return, UsuarioInfo, Container, Editor} from './styles'\r\nimport Tooltip from '../../components/tooltip/index'\r\n\r\nexport default function Receita(){\r\n\r\n    var history = useHistory()\r\n\r\n    const { params } = useRouteMatch();\r\n\r\n    const [Receita, setReceita] = useState([]);\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    useEffect(async () => {\r\n        api.get(`receitas/list/${params.receita}`).then((response) => {\r\n            setReceita(response.data)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    },[params.Receita])\r\n\r\n    async function handClick(){\r\n        console.log('entrou na função')\r\n        await api.delete(`receitas/delete/${params.receita}` ,{\r\n        }).then(() => {\r\n            toast.success('Receita excluída!')\r\n            history.push('/receitas')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    }\r\n\r\n    const schema = Yup.object().shape({\r\n        image: Yup.string()\r\n            .required(\"Titulo é obrigatório!\"),\r\n\r\n        title: Yup.string()\r\n            .required(\"Titulo é obrigatório!\"),\r\n    \r\n        description: Yup.string()\r\n            .required(\"Descrição é obrigatória!\"),\r\n    \r\n        link: Yup.string()\r\n            .required(\"Link é um campo obrigatório!\"),\r\n    \r\n    })\r\n\r\n    async function handlSubmit(data) {\r\n        console.log(data)\r\n        \r\n        await api.put(`receitas/edit/${Receita._id}` ,{ \r\n            title: data.title,\r\n            description: data.description,\r\n            link: data.link,\r\n         }).then(async () => {\r\n             toast.success('Receita atualizado')\r\n             history.push('/receitas')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n\r\n    }\r\n\r\n    async function handleClick(){\r\n        setEdit(false == edit)\r\n        if(edit){\r\n            toast.info('Campos de edição habilitado')\r\n        } else {\r\n            toast.info('Campos de edição desabilitado')\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n        <Return>\r\n            <Link to=\"/receitas\">\r\n                <FiChevronLeft/>\r\n                Voltar\r\n            </Link>\r\n        </Return>\r\n\r\n        <UsuarioInfo>\r\n            <h1>Informações da receita</h1>\r\n            <header>\r\n                <img src={Receita.image}/>\r\n                <div>\r\n                    <strong>\r\n                        {Receita.title}\r\n                    </strong>\r\n                    <p>\r\n                        {Receita.description}\r\n                    </p>\r\n                </div>\r\n            </header>\r\n            <div className=\"botoes\">\r\n                <a href={Receita.link} target=\"_blank\">ver<FiChevronRight/></a>\r\n                <button onClick={handClick} type=\"button\">Excluir <AiOutlineClose size={20} /></button>\r\n            </div>\r\n            <hr/>\r\n        </UsuarioInfo>\r\n        <Editor>\r\n            <div>\r\n                <h2>Editar receita</h2>\r\n                <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos para edição\"/></button>\r\n            </div>\r\n\r\n            <Form schema={schema} onSubmit={handlSubmit} initialData={Receita}>\r\n                {\r\n                    edit ? <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" disabled /> : <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" />\r\n                }\r\n                {\r\n                    edit ? <Input label=\"Titulo da receita\"  name=\"title\" placeholder=\"Ex.: Bolo de chocolate sem açucar\" disabled/> : <Input label=\"Titulo da receita\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\"/>\r\n                }\r\n                {\r\n                    edit ?  <Textarea rows=\"4\" label=\"Descrição\" name=\"description\" placeholder=\"Informe um breve descrição sobre a receita\" disabled/> : <Textarea rows=\"4\" label=\"Descrição\" name=\"description\" placeholder=\"Informe um breve descrição sobre a receita\" />\r\n                }\r\n                {\r\n                    edit ? <button disabled>Desabilitado</button> : <button onSubmit={e => { e.preventDefault()}} type=\"submit\" >Atualizar dados</button>\r\n                }\r\n            </Form>\r\n        </Editor>\r\n    </Container>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosRegistrar\\index.js",["334","335"],"import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport { FiChevronLeft } from 'react-icons/fi'\r\nimport { Container, Return } from './styles'\r\nimport { Form, Input, Textarea} from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\nimport {toast} from 'react-toastify'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from '../../services/api'\r\n\r\nconst schema = Yup.object().shape({\r\n\r\n    virtualDate: Yup.string()\r\n        .required(\"Data de agendamento obrigatória!\"),\r\n\r\n    hours: Yup.string()\r\n        .required(\"Horário é obrigatório para registrar um agendamento\"),\r\n    \r\n    note: Yup.string()\r\n})\r\n\r\nexport default function RegisterAgendamentos(){\r\n\r\n    var history = useHistory()\r\n\r\n    async function handlSubmit(data) {\r\n        const vet = data.virtualDate.split('-')\r\n        const dataFake = `${vet[2]}-${vet[1]}-${vet[0]}`\r\n        await api.post(`agendamento/register` ,{ \r\n            virtualDate: dataFake,\r\n            hours: data.hours,\r\n            note: data.note\r\n         }).then(async () => {\r\n            //history.go('/cadastrar-agendamento')\r\n            toast.success('Agendamento cadastrado com sucesso!')\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Return>\r\n                <Link to=\"/agenda\"s>\r\n                    <FiChevronLeft/>\r\n                    Voltar\r\n                </Link>\r\n            </Return>\r\n            <Container>\r\n                <Form schema={schema} onSubmit={handlSubmit}>\r\n                    <h2>Cadastrar agendamento para consulta</h2>\r\n                    <Input  name=\"virtualDate\" type=\"date\" label=\"Data para o agendamento\"/>\r\n                    <Input  name=\"hours\" type=\"time\" placeholder=\"Informe o horário da consulta\" label=\"Horário\" />\r\n                    <button type=\"submit\">Cadastrar</button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    )\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasRegister\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosListar\\index.js",["336","337"],"import React, {useState, useMemo, useEffect} from 'react';\r\nimport { format, subDays, addDays} from 'date-fns'\r\nimport pt from 'date-fns/locale/pt'\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md'\r\nimport {Link} from 'react-router-dom'\r\nimport Logo from '../../assets/logo-branca.svg'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport {AiFillPlusCircle} from 'react-icons/ai'\r\n\r\nimport {Container, Time, Loading} from './styles.js'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Scheduling(){\r\n    const [ schedule, setSchedule ] = useState([]);\r\n    const [ date, setDate ] = useState(new Date());\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const dateFormatted = useMemo(\r\n        () => format(date, \"d 'de' MMMM\", { locale: pt}),\r\n        [date]\r\n    );\r\n\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n\r\n        var data = ''\r\n        if(date.getMonth() < 10){\r\n            data = `0${date.getMonth()+1}-${date.getFullYear()}`\r\n        }else {\r\n            data = `${date.getMonth()+1}-${date.getFullYear()}`\r\n        }\r\n        if(date.getDate() < 10){\r\n            data = `0${date.getDate()}-${data}`\r\n        } else {\r\n            data = `${date.getDate()}-${data}`\r\n        }\r\n\r\n        await api.get(`agendamento/list/${data.toString()}`).then((response) => {\r\n            setSchedule(response.data)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    },[date])\r\n\r\n    function handlePrevDay() {\r\n        setDate(subDays(date, 1));\r\n    }\r\n\r\n    function handleNextDay() {\r\n        setDate(addDays(date, 1));\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    } else {\r\n        if(schedule.length == 0){\r\n            return (\r\n                <Container>\r\n                    <div className=\"cabe\">\r\n                        <img src={Logo} alt=\"Carol Nutri\"/>\r\n                        <h1>Explore o agendamento</h1>\r\n                        <Link to=\"/cadastrar-agendamento\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar nova data.\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <header>\r\n                        <button type=\"button\" onClick={handlePrevDay}> \r\n                            <MdChevronLeft size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                        <strong>{dateFormatted}</strong>\r\n                        <button type=\"button\" onClick={handleNextDay}> \r\n                            <MdChevronRight size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                    </header>\r\n                    <h2>Nada agendado para este dia</h2>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                    <div className=\"cabe\">\r\n                        <img src={Logo} alt=\"Carol Nutri\"/>\r\n                        <h1>Explore o agendamento</h1>\r\n                        <Link to=\"/cadastrar-agendamento\">\r\n                            <AiFillPlusCircle size={60}/>\r\n                            <Tooltip texto=\"Cadastrar nova data.\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <header>\r\n                        <button type=\"button\" onClick={handlePrevDay}> \r\n                            <MdChevronLeft size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                        <strong>{dateFormatted}</strong>\r\n                        <button type=\"button\" onClick={handleNextDay}> \r\n                            <MdChevronRight size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                    </header>\r\n    \r\n                    <ul>\r\n                        { schedule.map(agendamento => (\r\n                            <div key={String(agendamento._id)} >\r\n                                {\r\n                                    agendamento.status ? <Time available ><Link to={`/editar-agendamento/${agendamento._id}`}><strong >{agendamento.status ? 'Disponível para agendamento' : 'Não Disponível'}</strong><span>{agendamento.hours}</span><p>{agendamento.note}</p></Link></Time> : <Time past ><Link to={`/editar-agendamento/${agendamento._id}`}><strong >{agendamento.status ? 'Disponível para agendamento' : 'Não Disponível'}</strong><span>{agendamento.hours}</span><p>{agendamento.note}</p></Link></Time>\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\LandingPage\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosListar\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingUp\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\SingIn\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ForgotPassword\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesRegister\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesEdit\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosListagem\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosPublicos\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ArtigosEdit\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\ReceitasPublicas\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\PacientesListagem\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\tooltip\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\carousel\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasRegister\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasEdit\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentosRegistrar\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\auth\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\default\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\receitasListagem\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\AvatarInput\\index.js",["338","339","340"],"import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { useField } from '@rocketseat/unform';\r\nimport api from '../../../services/api'\r\nimport { Container } from './styles'\r\n\r\nimport {AuthContext} from '../../../context/AuthContext'\r\n\r\nexport default function AvatarInput() {\r\n\r\n    const { user } = useContext(AuthContext)\r\n\r\n    const { defaultValue } = useField(\"avatar\");\r\n\r\n    console.log(\"sls: \" + defaultValue)\r\n\r\n    const [preview, setPreview] = useState(defaultValue);  \r\n    \r\n    console.log(\"preview: \" + preview)\r\n    // const [file, setFile] = useState(defaultValue);\r\n\r\n    const ref = useRef();\r\n\r\n    async function handleChange(e) {\r\n        const data = new FormData();\r\n\r\n        data.append('file', e.target.files[0]);\r\n\r\n        await api.put(`files/${user._id}`, data);\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <label htmlFor=\"avatar\" >\r\n                <img src={preview || \"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"} alt=\"\" />\r\n                <input \r\n                    type=\"file\" \r\n                    id=\"avatar\" \r\n                    accept=\"image/*\"\r\n                    onChange={handleChange}\r\n                    // ref={ref}\r\n                />               \r\n            </label>\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\tooltip\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\artigosRegister\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\auth\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\_layouts\\default\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\Profile\\AvatarInput\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerAuth\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerDefault\\index.js",["341","342"],"import React, { useContext, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Content, Profile } from \"./styles.js\"\r\nimport logo from '../../assets/logo.svg'\r\nimport  history  from '../../services/history'\r\n\r\nimport { Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Nav } from 'reactstrap';\r\n\r\nimport {AuthContext} from '../../context/AuthContext'\r\n\r\nexport default function HeaderDefault(){\r\n    async function handleClick(){\r\n\r\n        try {\r\n            localStorage.removeItem('@CarolNutri:token')\r\n            localStorage.removeItem('@CarolNutri:user')\r\n   \r\n            history.go('/signin')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggle = () => setDropdownOpen(!dropdownOpen);\r\n    const { user } = useContext(AuthContext)\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                <nav>\r\n                <Link to=\"/dashboard\" title=\"Ir para Dashboard\">\r\n                    <img src={logo} alt=\"Carol Nutri\" />\r\n                </Link>\r\n                </nav>\r\n\r\n                <aside>\r\n                    <Profile>\r\n                        <Nav pills>\r\n                            <Dropdown nav isOpen={dropdownOpen} toggle={toggle}>\r\n                                <DropdownToggle nav caret>\r\n                                    <a>{user.name}</a>\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <Link to=\"/perfil\" title=\"Ir para seu perfil\">\r\n                                        <DropdownItem>\r\n                                            Perfil\r\n                                        </DropdownItem>\r\n                                    </Link>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem onClick={handleClick}>\r\n                                        Logout\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            </Nav>\r\n                            <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\r\n                    </Profile>\r\n                </aside>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\sideBar\\index.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\footer\\index.js",["343","344","345"],"import React from 'react'\r\nimport {  AiFillFacebook, AiFillInstagram,  AiOutlineWhatsApp } from \"react-icons/ai\";\r\n\r\nimport {Container} from './styles.js'\r\n\r\nexport default function Footer(){\r\n    return (\r\n            <Container>\r\n                <nav>\r\n                    <h3>KEEP IN TOUCH</h3>\r\n                    <div className=\"icons\">\r\n                        <a href=\"https://api.whatsapp.com/send?phone=+558494794472&text=Olá Carol. Gostaria de solicitar um orçamento.%20\" target=\"_blank\">\r\n                            <AiOutlineWhatsApp className=\"icon\" size={35}/>\r\n                        </a>\r\n                        <a href=\"https://www.instagram.com/carolbl_/?hl=pt-br\" target=\"_blank\">\r\n                            <AiFillInstagram className=\"icon\" size={35} />\r\n                        </a>\r\n                        <a href=\"https://www.facebook.com/caroline.bernardinol\" target=\"_blank\">\r\n                            <AiFillFacebook className=\"icon\" size={35}/>\r\n                        </a>\r\n                    </div>\r\n                </nav>\r\n            </Container>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\sideBar\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerDefault\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\headerAuth\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\components\\footer\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoEdit\\index.js",["346","347","348","349","350","351","352"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport { FiChevronLeft } from 'react-icons/fi'\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Input, Textarea, Check } from '@rocketseat/unform'\r\nimport * as Yup from 'yup'\r\n\r\nimport api from '../../services/api'\r\nimport {Return, Container, Editor} from './styles'\r\nimport Tooltip from '../../components/tooltip/index'\r\n\r\nexport default function Agendamento(){\r\n\r\n    var history = useHistory()\r\n\r\n    const { params } = useRouteMatch();\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [agendamento, setAgendamento] = useState([]);\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        api.get(`agendamento/listId/${params.id}`).then((response) => {\r\n            setAgendamento(response.data)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    },[params.id])\r\n\r\n    async function handlSubmit(data) {\r\n        console.log(data)\r\n        if(data.virtualDate == \"\" || data.hours == \"\" || data.note == \"\"){\r\n            toast.info('Campos obrigatórios vazios')\r\n        } else {\r\n            const vet = data.virtualDate.split('-')\r\n            const dataFake = `${vet[2]}-${vet[1]}-${vet[0]}`\r\n            await api.put(`agendamento/edit/${agendamento._id}` ,{ \r\n                virtualDate: dataFake,\r\n                hours: data.hours,\r\n                note: data.note,\r\n                status: data.status,\r\n             }).then(async () => {\r\n                 toast.success('Agendamento atualizado')\r\n                 history.push('/agenda')\r\n            }).catch((error) => {\r\n                let erro = JSON.parse(error.request.response)\r\n                toast.error(erro.error)\r\n            })\r\n        }\r\n    }\r\n    \r\n    async function handleClick(){\r\n        setEdit(false == edit)\r\n        if(edit){\r\n            toast.info('Campos de edição habilitados')\r\n        } else {\r\n            toast.info('Campos de edição desabilitados')\r\n        }\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n        <Return>\r\n            <Link to=\"/agenda\">\r\n                <FiChevronLeft/>\r\n                Voltar\r\n            </Link>\r\n        </Return>\r\n\r\n        <Editor>\r\n            <div>\r\n                <h2>Editar agendamento</h2>\r\n                <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos para edição\"/></button>\r\n            </div>\r\n\r\n            <Form onSubmit={handlSubmit} initialData={agendamento}>\r\n                <div>\r\n                {\r\n                    edit ? <Input  name=\"virtualDate\" type=\"date\" label=\"Data para o agendamento\" disabled /> : <Input  name=\"virtualDate\" type=\"date\" label=\"Data para o agendamento\"/>\r\n                }\r\n                {\r\n                    edit ? <Input  name=\"hours\" type=\"time\" placeholder=\"Informe o horário da consulta\" label=\"Horário\" disabled /> : <Input  name=\"hours\" type=\"time\" placeholder=\"Informe o horário da consulta\" label=\"Horário\" />\r\n                }\r\n                </div>\r\n\r\n                {\r\n                    edit ?  <Textarea rows=\"4\" label=\"Irfomações sobre o agendamento\" name=\"note\" placeholder=\"Ex.: Consulta online com Alice Costa ...\" disabled/> : <Textarea rows=\"4\" label=\"Descrição sobre o agendamento\" name=\"note\" placeholder=\"Informe um breve descrição sobre agendamento\" />\r\n                }\r\n                {\r\n                    edit ?  <Check label=\"Agendamento disponível\" name=\"status\" disabled/> : <Check label=\"Agendamento disponível\" name=\"status\" />\r\n                }\r\n                {\r\n                    edit ? <button disabled>Desabilitado</button> : <button onSubmit={e => { e.preventDefault()}} type=\"submit\" >Atualizar dados</button>\r\n                }\r\n\r\n            </Form>\r\n        </Editor>\r\n    </Container>\r\n    )\r\n\r\n\r\n}","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoEdit\\styles.js",[],"C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoPublico\\index.js",["353","354","355","356","357","358"],"import React, {useState, useMemo, useEffect} from 'react';\r\nimport { format, subDays, addDays} from 'date-fns'\r\nimport pt from 'date-fns/locale/pt'\r\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md'\r\nimport {Link} from 'react-router-dom'\r\nimport Logo from '../../assets/logo-branca.svg'\r\n\r\nimport {toast} from 'react-toastify'\r\nimport api from \"../../services/api\"\r\nimport Tooltip from '../../components/tooltip/index'\r\nimport {AiFillPlusCircle} from 'react-icons/ai'\r\n\r\nimport {Container, Time, Loading} from './styles.js'\r\nimport ReactLoading from 'react-loading'\r\n\r\nexport default function Scheduling(){\r\n    const [ schedule, setSchedule ] = useState([]);\r\n    const [ date, setDate ] = useState(new Date());\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const dateFormatted = useMemo(\r\n        () => format(date, \"d 'de' MMMM\", { locale: pt}),\r\n        [date]\r\n    );\r\n\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n\r\n        var data = ''\r\n        if(date.getMonth() < 10){\r\n            data = `0${date.getMonth()+1}-${date.getFullYear()}`\r\n        }else {\r\n            data = `${date.getMonth()+1}-${date.getFullYear()}`\r\n        }\r\n        if(date.getDate() < 10){\r\n            data = `0${date.getDate()}-${data}`\r\n        } else {\r\n            data = `${date.getDate()}-${data}`\r\n        }\r\n\r\n        await api.get(`agendamento/list/${data.toString()}`).then((response) => {\r\n            setSchedule(response.data)\r\n            setLoading(false)\r\n        }).catch((error) => {\r\n            let erro = JSON.parse(error.request.response)\r\n            toast.error(erro.error)\r\n        })\r\n    },[date])\r\n\r\n    function handlePrevDay() {\r\n        setDate(subDays(date, 1));\r\n    }\r\n\r\n    function handleNextDay() {\r\n        setDate(addDays(date, 1));\r\n    }\r\n\r\n    if (loading){\r\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\r\n    } else {\r\n        if(schedule.length == 0){\r\n            return (\r\n                <Container>\r\n                    <div className=\"cabe\">\r\n                        <img src={Logo} alt=\"Carol Nutri\"/>\r\n                        <h1>Explore o agendamento</h1>\r\n                    </div>\r\n                    <header>\r\n                        <button type=\"button\" onClick={handlePrevDay}> \r\n                            <MdChevronLeft size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                        <strong>{dateFormatted}</strong>\r\n                        <button type=\"button\" onClick={handleNextDay}> \r\n                            <MdChevronRight size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                    </header>\r\n                    <h2>Nada agendado para este dia</h2>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                    <div className=\"cabe\">\r\n                        <img src={Logo} alt=\"Carol Nutri\"/>\r\n                        <h1>Explore os dias dos agendamentos online</h1>\r\n                    </div>\r\n                    <header>\r\n                        <button type=\"button\" onClick={handlePrevDay}> \r\n                            <MdChevronLeft size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                        <strong>{dateFormatted}</strong>\r\n                        <button type=\"button\" onClick={handleNextDay}> \r\n                            <MdChevronRight size={36} color=\"#FFF\"/>\r\n                        </button>\r\n                    </header>\r\n    \r\n                    <ul>\r\n                        { schedule.map(agendamento => (\r\n                            <div key={String(agendamento._id)} >\r\n                                {\r\n                                    agendamento.status ? <Time available ><a href={`https://api.whatsapp.com/send?phone=+558494794472&text=Olá Carol. Vi em seu sistema que você possuí disponibilidade de consulta online para o dia ${agendamento.virtualDate.replace(\"-\", \"/\").replace()} às ${agendamento.hours}. Gostaria de marcar uma consulta nesta data e horário.%20`} target=\"_blank\"><strong >{agendamento.status ? 'Disponível para agendamento' : 'Não Disponível'}</strong><span>{agendamento.hours}</span><p>Click para agendar uma consulta</p></a></Time> : <Time past ><strong >{agendamento.status ? 'Disponível para agendamento' : 'Não Disponível'}</strong><span>{agendamento.hours}</span><p>Horário agendado com um paciente</p></Time>\r\n                                }\r\n                            </div>\r\n                        ))}\r\n                    </ul>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\Junior Teixeira\\Documents\\git\\sistema-carol-nutri\\front-end\\src\\pages\\AgendamentoPublico\\styles.js",[],{"ruleId":"359","replacedBy":"360"},{"ruleId":"361","replacedBy":"362"},{"ruleId":"363","severity":1,"message":"364","line":11,"column":8,"nodeType":"365","messageId":"366","endLine":11,"endColumn":9,"fix":"367"},{"ruleId":"368","severity":1,"message":"369","line":21,"column":13,"nodeType":"370","endLine":21,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":47,"column":21,"nodeType":"370","endLine":47,"endColumn":111},{"ruleId":"371","severity":1,"message":"372","line":64,"column":21,"nodeType":"370","endLine":64,"endColumn":258},{"ruleId":"373","severity":1,"message":"374","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":27},{"ruleId":"377","severity":1,"message":"378","line":24,"column":15,"nodeType":"379","endLine":39,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":96,"column":23,"nodeType":"382","messageId":"383","endLine":96,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":116,"column":25,"nodeType":"370","endLine":116,"endColumn":129},{"ruleId":"386","severity":1,"message":"387","line":193,"column":225,"nodeType":"388","endLine":193,"endColumn":258},{"ruleId":"384","severity":1,"message":"385","line":475,"column":25,"nodeType":"370","endLine":475,"endColumn":129},{"ruleId":"386","severity":1,"message":"387","line":573,"column":326,"nodeType":"388","endLine":573,"endColumn":359},{"ruleId":"377","severity":1,"message":"378","line":23,"column":15,"nodeType":"379","endLine":33,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":41,"column":18,"nodeType":"382","messageId":"383","endLine":41,"endColumn":20},{"ruleId":"380","severity":1,"message":"381","line":41,"column":32,"nodeType":"382","messageId":"383","endLine":41,"endColumn":34},{"ruleId":"377","severity":1,"message":"378","line":23,"column":15,"nodeType":"379","endLine":33,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":41,"column":18,"nodeType":"382","messageId":"383","endLine":41,"endColumn":20},{"ruleId":"380","severity":1,"message":"381","line":41,"column":32,"nodeType":"382","messageId":"383","endLine":41,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":91,"column":21,"nodeType":"370","endLine":91,"endColumn":87},{"ruleId":"384","severity":1,"message":"385","line":92,"column":25,"nodeType":"370","endLine":92,"endColumn":51},{"ruleId":"377","severity":1,"message":"378","line":24,"column":15,"nodeType":"379","endLine":31,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":76,"column":23,"nodeType":"382","messageId":"383","endLine":76,"endColumn":25},{"ruleId":"371","severity":1,"message":"372","line":106,"column":17,"nodeType":"370","endLine":106,"endColumn":55},{"ruleId":"377","severity":1,"message":"378","line":25,"column":15,"nodeType":"379","endLine":35,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":43,"column":18,"nodeType":"382","messageId":"383","endLine":43,"endColumn":20},{"ruleId":"380","severity":1,"message":"381","line":43,"column":32,"nodeType":"382","messageId":"383","endLine":43,"endColumn":34},{"ruleId":"371","severity":1,"message":"372","line":93,"column":21,"nodeType":"370","endLine":93,"endColumn":85},{"ruleId":"373","severity":1,"message":"389","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":20},{"ruleId":"373","severity":1,"message":"390","line":8,"column":21,"nodeType":"375","messageId":"376","endLine":8,"endColumn":31},{"ruleId":"380","severity":1,"message":"381","line":71,"column":23,"nodeType":"382","messageId":"383","endLine":71,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":23,"column":15,"nodeType":"379","endLine":32,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":40,"column":18,"nodeType":"382","messageId":"383","endLine":40,"endColumn":20},{"ruleId":"380","severity":1,"message":"381","line":40,"column":32,"nodeType":"382","messageId":"383","endLine":40,"endColumn":34},{"ruleId":"384","severity":1,"message":"385","line":89,"column":25,"nodeType":"370","endLine":89,"endColumn":129},{"ruleId":"377","severity":1,"message":"378","line":23,"column":15,"nodeType":"379","endLine":33,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":41,"column":18,"nodeType":"382","messageId":"383","endLine":41,"endColumn":20},{"ruleId":"380","severity":1,"message":"381","line":41,"column":32,"nodeType":"382","messageId":"383","endLine":41,"endColumn":34},{"ruleId":"384","severity":1,"message":"385","line":92,"column":25,"nodeType":"370","endLine":92,"endColumn":51},{"ruleId":"377","severity":1,"message":"378","line":24,"column":15,"nodeType":"379","endLine":31,"endColumn":6},{"ruleId":"377","severity":1,"message":"391","line":31,"column":7,"nodeType":"392","endLine":31,"endColumn":23,"suggestions":"393"},{"ruleId":"380","severity":1,"message":"381","line":78,"column":23,"nodeType":"382","messageId":"383","endLine":78,"endColumn":25},{"ruleId":"384","severity":1,"message":"385","line":98,"column":17,"nodeType":"370","endLine":98,"endColumn":43},{"ruleId":"371","severity":1,"message":"372","line":109,"column":17,"nodeType":"370","endLine":109,"endColumn":56},{"ruleId":"373","severity":1,"message":"394","line":6,"column":23,"nodeType":"375","messageId":"376","endLine":6,"endColumn":31},{"ruleId":"373","severity":1,"message":"395","line":26,"column":9,"nodeType":"375","messageId":"376","endLine":26,"endColumn":16},{"ruleId":"377","severity":1,"message":"378","line":26,"column":15,"nodeType":"379","endLine":48,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":61,"column":28,"nodeType":"382","messageId":"383","endLine":61,"endColumn":30},{"ruleId":"373","severity":1,"message":"396","line":1,"column":35,"nodeType":"375","messageId":"376","endLine":1,"endColumn":44},{"ruleId":"373","severity":1,"message":"397","line":16,"column":21,"nodeType":"375","messageId":"376","endLine":16,"endColumn":31},{"ruleId":"373","severity":1,"message":"398","line":21,"column":11,"nodeType":"375","messageId":"376","endLine":21,"endColumn":14},{"ruleId":"399","severity":1,"message":"400","line":43,"column":37,"nodeType":"370","endLine":43,"endColumn":40},{"ruleId":"384","severity":1,"message":"385","line":58,"column":29,"nodeType":"370","endLine":58,"endColumn":133},{"ruleId":"371","severity":1,"message":"372","line":12,"column":25,"nodeType":"370","endLine":12,"endColumn":156},{"ruleId":"371","severity":1,"message":"372","line":15,"column":25,"nodeType":"370","endLine":15,"endColumn":96},{"ruleId":"371","severity":1,"message":"372","line":18,"column":25,"nodeType":"370","endLine":18,"endColumn":97},{"ruleId":"373","severity":1,"message":"401","line":9,"column":13,"nodeType":"375","messageId":"376","endLine":9,"endColumn":16},{"ruleId":"373","severity":1,"message":"402","line":21,"column":12,"nodeType":"375","messageId":"376","endLine":21,"endColumn":19},{"ruleId":"377","severity":1,"message":"378","line":25,"column":15,"nodeType":"379","endLine":34,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":38,"column":29,"nodeType":"382","messageId":"383","endLine":38,"endColumn":31},{"ruleId":"380","severity":1,"message":"381","line":38,"column":49,"nodeType":"382","messageId":"383","endLine":38,"endColumn":51},{"ruleId":"380","severity":1,"message":"381","line":38,"column":68,"nodeType":"382","messageId":"383","endLine":38,"endColumn":70},{"ruleId":"380","severity":1,"message":"381","line":59,"column":23,"nodeType":"382","messageId":"383","endLine":59,"endColumn":25},{"ruleId":"373","severity":1,"message":"403","line":5,"column":9,"nodeType":"375","messageId":"376","endLine":5,"endColumn":13},{"ruleId":"373","severity":1,"message":"404","line":10,"column":8,"nodeType":"375","messageId":"376","endLine":10,"endColumn":15},{"ruleId":"373","severity":1,"message":"405","line":11,"column":9,"nodeType":"375","messageId":"376","endLine":11,"endColumn":25},{"ruleId":"377","severity":1,"message":"378","line":26,"column":15,"nodeType":"379","endLine":48,"endColumn":6},{"ruleId":"380","severity":1,"message":"381","line":61,"column":28,"nodeType":"382","messageId":"383","endLine":61,"endColumn":30},{"ruleId":"371","severity":1,"message":"372","line":101,"column":75,"nodeType":"370","endLine":101,"endColumn":386},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],"rest-spread-spacing","Unexpected whitespace after rest property operator.","ExperimentalRestProperty","unexpectedWhitespace",{"range":"408","text":"409"},"react/jsx-pascal-case","Imported JSX component Carousel_ must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactLoading' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.receita'. Either include it or remove the dependency array.","ArrayExpression",["410"],"'Textarea' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'setPreview' is assigned a value but never used.","'ref' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Yup' is defined but never used.","'loading' is assigned a value but never used.","'Link' is defined but never used.","'Tooltip' is defined but never used.","'AiFillPlusCircle' is defined but never used.","no-global-assign","no-unsafe-negation",[356,357],"",{"desc":"411","fix":"412"},"Update the dependencies array to be: [params.Receita, params.receita]",{"range":"413","text":"414"},[1069,1085],"[params.Receita, params.receita]"]