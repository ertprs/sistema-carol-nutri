[{"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/index.js":"1","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/App.js":"2","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/services/history.js":"3","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/styles/global.js":"4","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/context/AuthContext.js":"5","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/routes/index.js":"6","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/services/api.js":"7","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/routes/Route.js":"8","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/LandingPage/index.js":"9","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingUp/index.js":"10","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingIn/index.js":"11","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ForgotPassword/index.js":"12","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesListagem/index.js":"13","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesRegister/index.js":"14","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ReceitasPublicas/index.js":"15","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosListagem/index.js":"16","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosEdit/index.js":"17","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosPublicos/index.js":"18","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesEdit/index.js":"19","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosListar/index.js":"20","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/index.js":"21","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosRegistrar/index.js":"22","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/LandingPage/styles.js":"23","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosListar/styles.js":"24","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingUp/styles.js":"25","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingIn/styles.js":"26","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ForgotPassword/styles.js":"27","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesListagem/styles.js":"28","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesRegister/styles.js":"29","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ReceitasPublicas/styles.js":"30","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesEdit/styles.js":"31","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/styles.js":"32","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosPublicos/styles.js":"33","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosEdit/styles.js":"34","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosListagem/styles.js":"35","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosRegistrar/styles.js":"36","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/carousel/index.js":"37","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/tooltip/index.js":"38","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/auth/index.js":"39","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/default/index.js":"40","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/AvatarInput/index.js":"41","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/tooltip/styles.js":"42","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/auth/styles.js":"43","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/default/styles.js":"44","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/AvatarInput/styles.js":"45","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/footer/index.js":"46","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerAuth/index.js":"47","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerDefault/index.js":"48","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/sideBar/index.js":"49","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/sideBar/styles.js":"50","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerDefault/styles.js":"51","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerAuth/styles.js":"52","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/footer/styles.js":"53","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/artigosRegister/index.js":"54","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/artigosRegister/styles.js":"55","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/dashboard/index.js":"56","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasEdit/index.js":"57","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasEdit/styles.js":"58","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasListagem/index.js":"59","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasListagem/styles.js":"60","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasRegister/index.js":"61","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasRegister/styles.js":"62"},{"size":243,"mtime":1609811685333,"results":"63","hashOfConfig":"64"},{"size":545,"mtime":1609811685325,"results":"65","hashOfConfig":"64"},{"size":112,"mtime":1609811685481,"results":"66","hashOfConfig":"64"},{"size":663,"mtime":1609811685481,"results":"67","hashOfConfig":"64"},{"size":2430,"mtime":1609811685333,"results":"68","hashOfConfig":"64"},{"size":2802,"mtime":1609814725535,"results":"69","hashOfConfig":"64"},{"size":113,"mtime":1609811685481,"results":"70","hashOfConfig":"64"},{"size":813,"mtime":1609811685481,"results":"71","hashOfConfig":"64"},{"size":2432,"mtime":1609811685365,"results":"72","hashOfConfig":"64"},{"size":2243,"mtime":1609811685477,"results":"73","hashOfConfig":"64"},{"size":1411,"mtime":1609811685365,"results":"74","hashOfConfig":"64"},{"size":1535,"mtime":1609811685365,"results":"75","hashOfConfig":"64"},{"size":4025,"mtime":1609811685365,"results":"76","hashOfConfig":"64"},{"size":2490,"mtime":1609811685365,"results":"77","hashOfConfig":"64"},{"size":3846,"mtime":1609811685365,"results":"78","hashOfConfig":"64"},{"size":3761,"mtime":1609811685333,"results":"79","hashOfConfig":"64"},{"size":4682,"mtime":1609811685333,"results":"80","hashOfConfig":"64"},{"size":3762,"mtime":1609811685341,"results":"81","hashOfConfig":"64"},{"size":39070,"mtime":1609811685365,"results":"82","hashOfConfig":"64"},{"size":2874,"mtime":1609811929140,"results":"83","hashOfConfig":"64"},{"size":4111,"mtime":1609812113864,"results":"84","hashOfConfig":"64"},{"size":2298,"mtime":1609813994621,"results":"85","hashOfConfig":"64"},{"size":819,"mtime":1609811685365,"results":"86","hashOfConfig":"64"},{"size":1046,"mtime":1609811936128,"results":"87","hashOfConfig":"64"},{"size":1459,"mtime":1609811685477,"results":"88","hashOfConfig":"64"},{"size":1655,"mtime":1609811685365,"results":"89","hashOfConfig":"64"},{"size":1749,"mtime":1609811685365,"results":"90","hashOfConfig":"64"},{"size":3834,"mtime":1609811685365,"results":"91","hashOfConfig":"64"},{"size":1725,"mtime":1609811685365,"results":"92","hashOfConfig":"64"},{"size":3833,"mtime":1609811685365,"results":"93","hashOfConfig":"64"},{"size":4787,"mtime":1609811685365,"results":"94","hashOfConfig":"64"},{"size":2095,"mtime":1609811685365,"results":"95","hashOfConfig":"64"},{"size":3832,"mtime":1609811685341,"results":"96","hashOfConfig":"64"},{"size":5367,"mtime":1609811685333,"results":"97","hashOfConfig":"64"},{"size":3832,"mtime":1609811685333,"results":"98","hashOfConfig":"64"},{"size":519,"mtime":1609814044753,"results":"99","hashOfConfig":"64"},{"size":2114,"mtime":1609811685333,"results":"100","hashOfConfig":"64"},{"size":183,"mtime":1609811685333,"results":"101","hashOfConfig":"64"},{"size":346,"mtime":1609811685477,"results":"102","hashOfConfig":"64"},{"size":430,"mtime":1609811685477,"results":"103","hashOfConfig":"64"},{"size":1501,"mtime":1609811863896,"results":"104","hashOfConfig":"64"},{"size":778,"mtime":1609811685333,"results":"105","hashOfConfig":"64"},{"size":264,"mtime":1609811685477,"results":"106","hashOfConfig":"64"},{"size":263,"mtime":1609811685477,"results":"107","hashOfConfig":"64"},{"size":477,"mtime":1609811870920,"results":"108","hashOfConfig":"64"},{"size":1022,"mtime":1609811685333,"results":"109","hashOfConfig":"64"},{"size":1314,"mtime":1609811685333,"results":"110","hashOfConfig":"64"},{"size":2378,"mtime":1609811685333,"results":"111","hashOfConfig":"64"},{"size":2790,"mtime":1609814757411,"results":"112","hashOfConfig":"64"},{"size":1361,"mtime":1609811685333,"results":"113","hashOfConfig":"64"},{"size":1010,"mtime":1609811685333,"results":"114","hashOfConfig":"64"},{"size":2635,"mtime":1609811685333,"results":"115","hashOfConfig":"64"},{"size":932,"mtime":1609811685333,"results":"116","hashOfConfig":"64"},{"size":1989,"mtime":1609811685477,"results":"117","hashOfConfig":"64"},{"size":2153,"mtime":1609811685477,"results":"118","hashOfConfig":"64"},{"size":167,"mtime":1609811685477,"results":"119","hashOfConfig":"64"},{"size":4815,"mtime":1609811685481,"results":"120","hashOfConfig":"64"},{"size":5414,"mtime":1609811685481,"results":"121","hashOfConfig":"64"},{"size":3845,"mtime":1609811685481,"results":"122","hashOfConfig":"64"},{"size":3833,"mtime":1609811685481,"results":"123","hashOfConfig":"64"},{"size":2187,"mtime":1609811685481,"results":"124","hashOfConfig":"64"},{"size":2153,"mtime":1609811685481,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"1u9icrz",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"128"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/index.js",[],["265","266"],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/App.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/services/history.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/styles/global.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/context/AuthContext.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/routes/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/services/api.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/routes/Route.js",["267"],"import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthContext } from '../context/AuthContext'\n\nimport AuthLayout from '../pages/_layouts/auth'\nimport DefaltLayout from '../pages/_layouts/default'\n\nexport default function RouteWrapper({\n    component: Component, \n    isPrivate = false,\n    ... rest\n}) {\n\n    const { user } = useContext(AuthContext)\n\n    if(!user && isPrivate){\n        return <Redirect to=\"/signin\" />\n    }\n\n    if(user && !isPrivate){\n        return <Redirect to=\"/dashboard\" />\n    }\n\n    let Layout = user ? DefaltLayout : AuthLayout\n\n    return (\n        <Route { ... rest}\n            render={props => (\n                <Layout>\n                    <Component {... props} />\n                </Layout>  \n            )}\n        />\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/LandingPage/index.js",["268"],"import React from 'react';\nimport './styles.js'\n\nimport Carousel_ from '../../components/carousel/index'\nimport logo from '../../assets/logo-completa.svg'\nimport foto1 from '../../assets/carol-nutri-maca.jpg'\nimport foto2 from '../../assets/carol-nutri.jpg'\nimport {Container} from './styles'\n\nexport default function LandingPage(){\n    return (\n        <div>\n            <Carousel_/>\n                <Container>\n                        <div className=\"imgs\">\n                            <img className=\"foto\" src={foto1} alt=\"Carol-nutricionista\"/>\n                            <img className=\"logo\" src={logo} alt=\"Carol-nutricionista\"/>\n                            <img className=\"foto\" src={foto2} alt=\"Carol-nutricionista\"/>\n                        </div>\n                        <div className=\"conteudo\" id=\"sobre\">\n                            <h1>Sobre Carol</h1>\n                            <p> Sou Carol Bernardino, tenho 22 anos e escolhi cuidar do próximo através do\n                                alimento desde os 17 anos quando ingressei no curso de nutrição. Atuo na\n                                área clínica e esportiva (pós graduanda na mesma área), acolhendo cada\n                                paciente com muito amor e afeto, abraçando cada objetivo individualmente e\n                                segurando a mão para percorrer o melhor trajeto para o resultado. No lindo\n                                laço formado por Nutricionista e paciente, me transbordo e vibro cada\n                                conquista como se fosse minha.\n                            </p>\n                            <p>\n                                “É o invisível que produz o visível”. Ao longo dos quatro anos de graduação\n                                pude moldar o meu interior, esse invisível tão importante para demonstração do\n                                amor pelo cuidado e pela profissão que escolhi, que tem sido intensificado na\n                                convivência com todos que optam por ser do meu time.\n                            </p>\n                            <p>\n                            Agradeço a confiança no meu trabalho e reafirmo: No <strong>#TeamCarol</strong> o amor é\n                            transmitido através do alimento!\n                            </p>\n                        </div>\n                </Container>\n        </div>\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingUp/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingIn/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ForgotPassword/index.js",["269"],"import React, { useContext } from 'react';\nimport { Form, Input } from '@rocketseat/unform'\nimport * as Yup from 'yup'\nimport {toast} from 'react-toastify'\nimport { useHistory } from 'react-router-dom'\n\nimport logo from '../../assets/logo-branca.svg'\nimport { Wrapper, Content } from './styles'\n\nimport api from '../../services/api'\n\nconst schema = Yup.object().shape({\n    email: Yup.string()\n        .email(\"Insira um e-mail válido!\")\n        .required(\"O e-mail é obrigatório!\")\n})\n\n\nexport default function ForgotPassword(){\n\n    var history = useHistory()\n    \n    async function handlesubmit(data){\n        await api.post('auth/forgot_password'  ,{\n            email: data.email,\n        }).then((response) => {\n\n            toast.success('Token enviado. Verifique sua caixa de e-mail.')\n            history.push('/signin')\n\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    }\n    \n    return (\n        <>\n            <Wrapper>\n                <Content>\n                    <img src={logo} alt=\"Carol-nutricionista\"/>\n\n                    <Form schema={schema} onSubmit={handlesubmit}>\n                        <p>Informe seu e-mail para enviarmos um token para a recuperação da senha.</p>\n                        <Input name=\"email\" type=\"email\" placeholder=\"Seu e-mail\" />\n\n                        <button type=\"submit\">Enviar</button>\n                    </Form>\n                </Content>\n            </Wrapper>\n        </>\n    )\n\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesListagem/index.js",["270","271","272","273"],"import React, { useState, useRef, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport {FiChevronRight} from 'react-icons/fi'\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\n\nimport {Container, Formulario, Paciente, Loading} from './styles'\nimport Logo from '../../assets/logo-branca.svg'\nimport api from \"../../services/api\"\nimport Tooltip from '../../components/tooltip/index'\nimport ReactLoading from 'react-loading'\n\nexport default function Pacientes(){\n    const [pacientes, setPacientes] = useState([]);\n    const [busca, setBusca] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    //Objeto mutavel\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\n\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\n    useEffect(async () => {\n        setLoading(true)\n        api.get('/user/users').then((response) => {\n            setPacientes(response.data.docs)\n            setLoading(false)\n        }).catch((error) => {\n            setLoading(false)\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        }) \n    },[cb])\n\n    function onChange(event) {\n        setBusca(event.target.value)\n    }\n\n    function handleClick(){\n        setLoading(true)\n        if(busca == ''|| busca == undefined){\n            api.get('/user/users').then((response) => {\n                setPacientes(response.data.docs)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        } else {\n            api.get(`user/userName/${busca}`).then((response) => {\n                setPacientes(response.data)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        }\n    }\n\n    if (loading){\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\n    }\n\n    return(\n        <>\n            <Container>\n                <img src={Logo} alt=\"Carol Nutri\"/>\n                <h1>Explore a lista dos pacientes.</h1>\n            </Container>\n\n            <Formulario onSubmit={e => { e.preventDefault()}}>\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\n                <Link>\n                    <div>\n                        <Link to=\"/registrar-paciente\">\n                            <AiFillPlusCircle size={60}/>\n                            <Tooltip texto=\"Cadastrar novo usuário.\"/>\n                        </Link>\n                    </div>\n                </Link>\n            </Formulario>\n\n            {pacientes.map(paciente => (\n                \n                <Paciente>\n                    <Link key={String(paciente._id)}  to={`/paciente/${paciente._id}`}>\n                        <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\n                        <div>\n                            <div className=\"conteudo\">\n                                <strong>{paciente.name}</strong>\n                                <p>{paciente.email}</p>\n                                <span>{paciente.status}</span>\n                            </div>\n                        </div>\n\n                        <FiChevronRight size={20}/>\n                    </Link>\n                </Paciente>\n            ))}\n        </>\n    )\n}\n","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesRegister/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ReceitasPublicas/index.js",["274","275","276","277","278"],"import React, { useState, useRef, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport {FiChevronRight} from 'react-icons/fi'\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\nimport ReactLoading from 'react-loading'\n\nimport {Container, Formulario, Receita, Loading} from './styles'\nimport Logo from '../../assets/logo-branca.svg'\nimport api from \"../../services/api\"\nimport Tooltip from '../../components/tooltip/index'\n\nexport default function Receitas(){\n    const [receitas, setReceitas] = useState([]);\n    const [busca, setBusca] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    //Objeto mutavel\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\n\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\n    useEffect(async () => {\n        setLoading(true)\n        api.get('receitas/list').then((response) => {\n            setReceitas(response.data.docs)\n            setLoading(false)\n        }).catch((error) => {\n            setLoading(false)\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        }) \n    },[cb])\n\n    function onChange(event) {\n        setBusca(event.target.value)\n    }\n\n    function handleClick(){\n        setLoading(true)\n        if(busca == ''|| busca == undefined){\n            api.get('receitas/list').then((response) => {\n                setReceitas(response.data.docs)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        } else {\n            api.get(`receitas/listName/${busca}`).then((response) => {\n                setReceitas(response.data)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        }\n    }\n\n    if (loading){\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\n    }\n\n    return(\n        <>\n            <Container>\n                <img src={Logo} alt=\"Carol Nutri\"/>\n                <h1>Explore a lista de receitas.</h1>\n            </Container>\n\n            <Formulario>\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\n                <Link>\n                    <div>\n                        <Link to=\"/registrar-receita\">\n                            <AiFillPlusCircle size={60}/>\n                            <Tooltip texto=\"Cadastrar novo usuário.\"/>\n                        </Link>\n                    </div>\n                </Link>\n            </Formulario>\n\n            {receitas.map(receita => (\n                \n                <Receita>\n                    <a key={String(receita._id)}  href={receita.link} target=\"_blank\">\n                        <img src={receita.image}/>\n                        <div>\n                            <div className=\"conteudo\">\n                                <strong>{receita.title}</strong>\n                                <p>{receita.description}</p>\n                            </div>\n                        </div>\n\n                        <FiChevronRight size={20}/>\n                    </a>\n                </Receita>\n            ))}\n        </>\n    )\n    \n}\n","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosListagem/index.js",["279","280","281"],"import React, { useState, useRef, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport {FiChevronRight} from 'react-icons/fi'\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\n\nimport {Container, Formulario, Artigo, Loading} from './styles'\nimport Logo from '../../assets/logo-branca.svg'\nimport api from \"../../services/api\"\nimport Tooltip from '../../components/tooltip/index'\nimport ReactLoading from 'react-loading'\n\nexport default function Artigos(){\n    const [artigos, setArtigo] = useState([]);\n    const [busca, setBusca] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    //Objeto mutavel\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\n\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\n    useEffect(async () => {\n        setLoading(true)\n        api.get('artigo/list').then((response) => {\n            setArtigo(response.data?.docs)\n            setLoading(false)\n        }).catch((error) => {\n            setLoading(false)\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        }) \n    },[cb])\n\n    function onChange(event) {\n        setBusca(event.target.value)\n    }\n\n    function handleClick(){\n        setLoading(true)\n        if(busca == ''|| busca == undefined){\n            api.get('artigo/list').then((response) => {\n                setArtigo(response.data.docs)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        } else {\n            api.get(`artigo/listName/${busca}`).then((response) => {\n                setArtigo(response.data)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        }\n    }\n\n    if (loading){\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\n    }\n\n    return(\n        <>\n            <Container>\n                <img src={Logo} alt=\"Carol Nutri\"/>\n                <h1>Explore a lista de artigos.</h1>\n            </Container>\n\n            <Formulario>\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\n                <Link>\n                    <div>\n                        <Link to=\"/registrar-artigo\">\n                            <AiFillPlusCircle size={60}/>\n                            <Tooltip texto=\"Cadastrar novo artigo.\"/>\n                        </Link>\n                    </div>\n                </Link>\n            </Formulario>\n\n            {artigos.map(artigo => (\n                \n                <Artigo>\n                    <Link key={String(artigo._id)}  to={`/artigo/${artigo._id}`}>\n                        <div>\n                            <div className=\"conteudo\">\n                                <strong>{artigo.title}</strong>\n                                <p>{artigo.description}</p>\n                            </div>\n                        </div>\n\n                        <FiChevronRight size={20}/>\n                    </Link>\n                </Artigo>\n            ))}\n        </>\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosEdit/index.js",["282","283","284"],"import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport { FiChevronLeft,  FiChevronRight } from 'react-icons/fi'\nimport { AiOutlineClose, AiFillEdit } from \"react-icons/ai\";\nimport { useHistory } from 'react-router-dom'\nimport { Form, Input, Textarea } from '@rocketseat/unform'\nimport * as Yup from 'yup'\n\nimport api from '../../services/api'\nimport {Return, ArtigoInfo, Container, Editor} from './styles'\nimport Tooltip from '../../components/tooltip/index'\n\nexport default function Artigo(){\n\n    var history = useHistory()\n\n    const { params } = useRouteMatch();\n\n    const [artigo, setArtigo] = useState([]);\n    const [edit, setEdit] = useState(true);\n\n    useEffect(async () => {\n        api.get(`artigo/list/${params.artigo}`).then((response) => {\n            setArtigo(response.data)\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    },[params.artigo])\n\n    async function handClick(){\n        console.log('entrou na função')\n        await api.delete(`artigo/delete/${artigo._id}` ,{\n        }).then(() => {\n            toast.success('Receita excluída!')\n            history.push('/artigos')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    }\n\n    const schema = Yup.object().shape({\n\n        title: Yup.string()\n            .required(\"Titulo é obrigatório!\"),\n    \n        description: Yup.string()\n            .required(\"Descrição é obrigatória!\"),\n    \n        link: Yup.string()\n            .required(\"Link é um campo obrigatório!\"),\n    \n    })\n\n    async function handlSubmit(data) {\n        console.log(data)\n        \n        await api.put(`artigo/edit/${artigo._id}` ,{ \n            title: data.title,\n            description: data.description,\n            link: data.link,\n         }).then(async () => {\n             toast.success('Artigo atualizado')\n             history.push('/artigos')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n\n    }\n    \n    async function handleClick(){\n        setEdit(false == edit)\n        if(edit){\n            toast.info('Campos de edição habilitado')\n        } else {\n            toast.info('Campos de edição desabilitado')\n        }\n    }\n\n    return (\n    <Container>\n        <Return>\n            <Link to=\"/artigos\">\n                <FiChevronLeft/>\n                Voltar\n            </Link>\n        </Return>\n\n        <ArtigoInfo>\n            <h1>Informações do artigo</h1>\n            <header>\n                <div>\n                    <strong>\n                        {artigo.title}\n                    </strong>\n                    <p>\n                        {artigo.description}\n                    </p>\n                </div>\n            </header>\n            <div className=\"botoes\">\n                <a href={artigo.link} target=\"_blank\">ver<FiChevronRight/></a>\n                <button onClick={handClick} type=\"button\">Excluir <AiOutlineClose size={20} /></button>\n            </div>\n            <hr/>\n        </ArtigoInfo>\n        <Editor>\n            <div>\n                <h2>Editar artigo</h2>\n                <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos para edição\"/></button>\n            </div>\n\n            <Form schema={schema} onSubmit={handlSubmit} initialData={artigo}>\n                {\n                    edit ? <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" disabled /> : <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" />\n                }\n                {\n                    edit ? <Input label=\"Titulo do artigo\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\" disabled/> : <Input label=\"Titulo do artigo\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\"/>\n                }\n                {\n                    edit ?  <Textarea rows=\"4\" label=\"Descrição sobre o artigo\" name=\"description\" placeholder=\"Informe um breve descrição sobre artigo\" disabled/> : <Textarea rows=\"4\" label=\"Descrição sobre o artigo\" name=\"description\" placeholder=\"Informe um breve descrição sobre artigo\" />\n                }\n                {\n                    edit ? <button disabled>Desabilitado</button> : <button onSubmit={e => { e.preventDefault()}} type=\"submit\" >Atualizar dados</button>\n                }\n            </Form>\n        </Editor>\n    </Container>\n    )\n\n\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosPublicos/index.js",["285","286","287","288"],"import React, { useState, useRef, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport {FiChevronRight} from 'react-icons/fi'\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\n\nimport {Container, Formulario, Artigo, Loading} from './styles'\nimport Logo from '../../assets/logo-branca.svg'\nimport api from \"../../services/api\"\nimport Tooltip from '../../components/tooltip/index'\n\nimport ReactLoading from 'react-loading'\n\nexport default function Artigos(){\n\n    const [artigos, setArtigo] = useState([]);\n    const [busca, setBusca] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    //Objeto mutavel\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\n\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\n    useEffect(async () => {\n        setLoading(true)\n        api.get('artigo/list').then((response) => {\n            setArtigo(response.data.docs)\n            setLoading(false)\n        }).catch((error) => {\n            setLoading(false)\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        }) \n    },[cb])\n\n    function onChange(event) {\n        setBusca(event.target.value)\n    }\n\n    function handleClick(){\n        setLoading(true)\n        if(busca == ''|| busca == undefined){\n            api.get('artigo/list').then((response) => {\n                setArtigo(response.data.docs)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        } else {\n            api.get(`artigo/listName/${busca}`).then((response) => {\n                setArtigo(response.data)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        }\n    }\n\n    if (loading){\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\n    }\n\n    return(\n        <>\n            <Container>\n                <img src={Logo} alt=\"Carol Nutri\"/>\n                <h1>Explore a lista de artigos.</h1>\n            </Container>\n\n            <Formulario>\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\n                <Link>\n                    <div>\n                        <Link to=\"/registrar-artigo\">\n                            <AiFillPlusCircle size={60}/>\n                            <Tooltip texto=\"Cadastrar novo artigo.\"/>\n                        </Link>\n                    </div>\n                </Link>\n            </Formulario>\n\n            {artigos.map(artigo => (\n                \n                <Artigo>\n                    <a key={String(artigo._id)} href={artigo.link} target=\"_blank\" >\n                        <div>\n                            <div className=\"conteudo\">\n                                <strong>{artigo.title}</strong>\n                                <p>{artigo.description}</p>\n                            </div>\n                        </div>\n\n                        <FiChevronRight size={20}/>\n                    </a>\n                </Artigo>\n            ))}\n        </>\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesEdit/index.js",["289","290","291","292","293","294"],"import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport { Form, Input, Textarea, Select, Check, Scope } from '@rocketseat/unform'\n\nimport { FiChevronLeft } from 'react-icons/fi'\nimport {AiOutlineMail, AiOutlinePhone, AiOutlineBell, AiFillEdit} from 'react-icons/ai'\n\nimport Tooltip from '../../components/tooltip/index'\nimport api from '../../services/api'\n\nimport {Return, UsuarioInfo, Container, MedicalInfo} from './styles'\n\n\nexport default function Paciente(){\n\n    const { params } = useRouteMatch();\n\n    const [paciente, setPaciente] = useState([]);\n    const [informacoesMedicas, setInformacoesMedicas] = useState({});\n    const [edit, setEdit] = useState(true);\n\n    useEffect(async () => {\n        await api.get(`form/list/${params.paciente}`).then((response) => {\n            console.log(response.data)\n            setInformacoesMedicas(response?.data)\n        }).catch((error) => {\n            setInformacoesMedicas(undefined)\n            let erro = JSON.parse(error.request.response)\n            toast.info(erro.error)\n        })\n        await api.get(`user/user/${params.paciente}`).then((response) => {\n            setPaciente(response.data)\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    },[params.paciente])\n\n    async function handleSubmitRegister(data){\n        await api.post(`form/register`, {\n\n            user: params.paciente,\n            PersonalInformation: data.PersonalInformation,\n            nutritionalSemiology: data.nutritionalSemiology,\n            waterConsumption: data.waterConsumption,\n            allergiesAndIntolerances: data.allergiesAndIntolerances,\n            useOfMedicines: data.useOfMedicines,\n            physicalActivity: data.physicalActivity,\n            alcoholicBeverage: data.alcoholicBeverage,\n            smoking: data.smoking,\n            schedules: data.schedules,\n            dietaryEvaluation: data.dietaryEvaluation,\n            preferencesAndAversions: data.preferencesAndAversions,\n            anthropometricEvaluation: data.anthropometricEvaluation\n\n        }).then((response) => {\n            setEdit(true)\n            setInformacoesMedicas(response.data)\n            toast.success('Dados cadastrados.')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })     \n    }\n\n    async function handleSubmitEdit(data){\n        await api.put(`form/edit/${informacoesMedicas._id}`, {\n            \n            PersonalInformation: data.PersonalInformation,\n            nutritionalSemiology: data.nutritionalSemiology,\n            waterConsumption: data.waterConsumption,\n            allergiesAndIntolerances: data.allergiesAndIntolerances,\n            useOfMedicines: data.useOfMedicines,\n            physicalActivity: data.physicalActivity,\n            alcoholicBeverage: data.alcoholicBeverage,\n            smoking: data.smoking,\n            schedules: data.schedules,\n            dietaryEvaluation: data.dietaryEvaluation,\n            preferencesAndAversions: data.preferencesAndAversions,\n            anthropometricEvaluation: data.anthropometricEvaluation\n\n        }).then((response) => {\n            setEdit(true)\n            setInformacoesMedicas(response.data)\n            toast.success('Dados atualizados')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })        \n    }\n\n    async function handleClick(){\n        setEdit(false == edit)\n        if(edit){\n            toast.info('Campos de edição habilitado')\n        } else {\n            toast.info('Campos de edição desabilitado')\n        }\n    }\n\n    if(!informacoesMedicas){\n        return (\n            <Container>\n                <Return>\n                    <Link to=\"/pacientes\">\n                        <FiChevronLeft/>\n                        Voltar\n                    </Link>\n                </Return>\n        \n                <UsuarioInfo>\n                    <header>\n                        <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\n                        <div>\n                            <strong>\n                                {paciente.name}\n                            </strong>\n                            <p>\n                                <AiOutlineMail/> {paciente.email}\n                            </p>\n                            <span>\n                            <AiOutlinePhone size={18}/> {paciente.phone}\n                            </span>\n                            <br/>\n                            <span>\n                            <AiOutlineBell/> {paciente.status}\n                            </span>\n                        </div>\n                    </header>\n                    <hr/>\n                </UsuarioInfo>\n    \n                <MedicalInfo>\n                    <Form onSubmit={handleSubmitRegister}>\n                        <h4>1. INFORMAÇÕES PESSOAIS</h4>\n                        <div name=\"PersonalInformation\">\n                            <div>\n                                <Input label=\"Data de nascimento\" type=\"date\" name=\"dateBirth\" placeholder=\"Data de nascimento\" />\n                            </div>\n                            <div>\n                                <Select label=\"Estado civil\" name=\"maritalStatus\" id=\"maritalStatus\" options={[{id: \"solteiro\", title: 'Solteiro'}, {id: \"casado\", title: 'Casado'}, {id: \"divorciado\", title: 'Divorciado'}]} placeholder=\"Selecione uma opção\"/>  \n                            </div>\n                            <div>\n                                <Input label=\"Peso\" type=\"Number\" max=\"400\" min=\"0\" step=\"0.1\" name=\"Weight\" placeholder=\"Peso em kg\" />\n                            </div>\n                            <div>\n                                <Input label=\"Altura\" type=\"Number\" max=\"3.00\" min=\"0\" step=\"0.01\" name=\"height\" placeholder=\"Altura em metros\" />\n                            </div>               \n                        </div>\n    \n                        <div>\n                            <div>\n                                <Input label=\"Profissão\" type=\"text\" name=\"profession\" placeholder=\"Profissão\" />\n                            </div>  \n                            <div>\n                                <Select label=\"Transito intestinal\" name=\"IntestinalTransit\" id=\"IntestinalTransit\" options={[{id: \"1\", title: '1'}, {id: \"2\", title: '2'}, {id: \"3\", title: '3'}, {id: \"4\", title: '4'}, {id: \"5\", title: '5'}, {id: \"6\", title: '6'}, {id: '7', title: '7'}]} placeholder=\"Selecione uma opção\" /> \n                            </div>\n                            <div>\n                                <Select label=\"Escala urinaria\" name=\"UrinaryStaining\" id=\"UrinaryStaining\" options={[{id: \"1\", title: '1'}, {id: \"2\", title: '2'}, {id: \"3\", title: '3'}, {id: \"4\", title: '4'}, {id: \"5\", title: '5'}, {id: \"6\", title: '6'}, {id: '7', title: '7'}, {id: '8', title: '8'}]} placeholder=\"Selecione uma opção\" />\n                            </div>\n                            <div>\n                                <Select label=\"Genero fisiologico\" name=\"genre\" id=\"genre\" options={[{id: \"Mulher\", title: 'Mulher'}, {id: \"Homem\", title: 'Homem'}]} placeholder=\"Selecione uma opção\" />\n                            </div>\n                            <div>\n                                <Select label=\"Qualidade do sono\" name=\"sleepQuality\" id=\"sleepQuality\" options={[{id: \"Ruim\", title: 'Ruim'}, {id: \"Bom\", title: 'Bom'}]} placeholder=\"Selecione uma opção\" />\n                            </div>\n                        </div>\n    \n                        <div>\n                            <div>\n                                <Textarea label=\"Historico clínico\" id=\"clinicalHistory\" name=\"clinicalHistory\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n    \n                            <div>\n                                <Textarea label=\"Objetivo\" id=\"objective\" name=\"objective\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>2. SEMIOLOGIA NUTRICIONAL</h4>\n    \n                        <h5>2.1 ALTERAÇÃO DE PESO</h5>\n                        <div>\n                            <div>\n                                <Select label=\"Tipo\" name=\"kgChanges\" id=\"kgChanges\" options={[{id: \"PerdaPeso\", title: 'Perda de Peso'}, {id: \"GanhoPeso\", title: 'Ganho de Peso'}]} placeholder=\"Selecione uma opção\" placeholder=\"Selecione uma opção\"/>\n                            </div>\n                            <div>\n                                <Input label=\"Quantidade\" type=\"Number\" max=\"400\" step=\"0.1\" name=\"obsWeight\" placeholder=\"Peso em kg\" />\n                            </div>               \n                        </div>\n    \n                        <h5>2.2 EXAME FÍSICO</h5>\n                        <div>\n                            <div>\n                                <Check label=\"Pele Ressecada\"  id=\"drySkin\" name=\"drySkin\" />\n                            </div>\n    \n                            <div>\n                                <Check label=\"Umidade das mucosas\"  id=\"mucousMoisture\" name=\"mucousMoisture\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Queda de cabelo\"  id=\"lossOfHair\" name=\"lossOfHair\"/>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <Check label=\"Edema\"  id=\"edema\" name=\"edema\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Fraqueza\" id=\"weakness\" name=\"weakness\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Palidez conjutival\" defaultChecked=\"sim\" id=\"conjunctivalPallor\" name=\"conjunctivalPallor\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Unhas coiloníquas\" id=\"koilonychicNails\" name=\"koilonychicNails\"/>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <Textarea label=\"Observação\" id=\"obsPhysicalExam\" name=\"obsPhysicalExam\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n    \n                        <h5>2.3 ALTERAÇÃO NO APARELHO DIGESTIVO</h5>\n                        <div>\n                            <div>\n                                <Check label=\"Dispepsia\" id=\"dyspepsia\" name=\"dyspepsia\" />\n                            </div>\n    \n                            <div>\n                                <Check label=\"Dores estomacais\" id=\"stomachPains\" name=\"stomachPains\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Nauseas\" id=\"nausea\" name=\"nausea\"/>\n                            </div>\n    \n                            <div>\n                                <Check label=\"Vômitos\" id=\"vomiting\" name=\"vomiting\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Disfagia\" id=\"dysphagia\" name=\"dysphagia\"/>\n                            </div>\n                        </div>\n                        <div>\n                            <div>\n                                <Textarea label=\"Observação\" id=\"obsDisgestiveSystem\" name=\"obsDisgestiveSystem\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n    \n                        <h5>2.4 ALTERAÇÕES INTESTINAIS</h5>\n                        <div>\n                            <div>\n                                <Check label=\"Diarreia\" id=\"diarreia\" name=\"diarreia\"/>\n                            </div>\n                            <div>\n                                <Check label=\"Constipação\" id=\"cold\" name=\"cold\"/>\n                            </div>\n                            <div>\n                                <Textarea label=\"Observação\" id=\"obsIntestinalChanges\" name=\"obsIntestinalChanges\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>3. CONSUNO DE ÁGUA</h4>\n                        <div>\n                            <div>\n                                <Textarea labe=\"Descrição\" id=\"waterConsumption\" name=\"waterConsumption\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n        \n                        <h4>4. ALERGIAS E INTOLERÂNCIAS</h4>\n                        <div>\n                            <div>\n                                <Textarea label=\"Alergia alimentar\" id=\"foodAllergy\" name=\"foodAllergy\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n    \n                            <div>\n                                <Textarea label=\"Outras alergias\" id=\"otherAllergies\" name=\"otherAllergies\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n    \n                            <div>\n                                <Textarea label=\"Intolerâncias\" id=\"intolerances\" name=\"intolerances\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>5. USO DE MEDICAMENTOS/SUPLEMENTOS</h4>\n                        <hr/>\n    \n                        <h4>6. ATIVIDADE FÍSICA</h4>\n                        <div>\n                            <div>\n                                <Check label=\"Pratica atividade Física\" id=\"physicalActivityYesNo\" name=\"physicalActivityYesNo\"/>\n                            </div>\n                            <div>\n                                <Textarea label=\"Discrição da frenquência\" id=\"frequencyActivity\" name=\"frequencyActivity\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>7. BEBIDA ALCOÓLICA</h4>\n                        <div>\n                            <div>\n                                <Check label=\"Ingere bebida alcoolica\" id=\"yesNoBeverage\" name=\"yesNoBeverage\"/>\n                            </div>\n                            <div>\n                                <Textarea label=\"Discrição da frenquência\" id=\"frequencyBeverage\" name=\"frequencyBeverage\" rows=\"6\" cols=\"30\">\n                                </Textarea>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>8. TABAGISMO</h4>\n                        <div>\n                            <div>\n                                <Check label=\"Fumante\" id=\"smoking\" name=\"smoking\"/>\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>9. HORARIOS</h4>\n                        <div>\n                            <div>\n                                <Input label=\"Acorda às\" type=\"time\" name=\"wakeUp\" />\n                            </div>\n                            <div>\n                                <Input label=\"Dorme às\" type=\"time\" name=\"profession\" />\n                            </div>\n                            <div>\n                                <Input label=\"Atividade física às\" type=\"time\" name=\"physicalActivity\" />\n                            </div> \n                        </div>\n                        <hr/>\n    \n                        <h4>10. AVALIAÇÃO DIETÉTICA</h4>\n    \n                        <h5>10.1. PREFERÊNCIAS E AVERSÕES</h5>\n                        <hr/>\n    \n                        <button className=\"Salve\" type=\"submit\" onSubmit={e => { e.preventDefault()}} >Cadastrar dados</button>\n                    </Form>\n                </MedicalInfo>\n            </Container>\n            )\n    } else {\n        return (\n            <Container>\n                <Return>\n                    <Link to=\"/pacientes\">\n                        <FiChevronLeft/>\n                        Voltar\n                    </Link>\n                </Return>\n        \n                <UsuarioInfo>\n                    <header>\n                        <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\n                        <div>\n                            <strong>\n                                {paciente.name}\n                            </strong>\n                            <p>\n                                <AiOutlineMail/> {paciente.email}\n                            </p>\n                            <span>\n                            <AiOutlinePhone size={18}/> {paciente.phone}\n                            </span>\n                            <br/>\n                            <span>\n                            <AiOutlineBell/> {paciente.status}\n                            </span>\n                        </div>\n                    </header>\n                    <hr/>\n                </UsuarioInfo>\n    \n                <MedicalInfo>\n                    <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Editar informações\"/></button>\n                    <Form onSubmit={handleSubmitEdit} initialData={informacoesMedicas}>\n                        <h4>1. INFORMAÇÕES PESSOAIS</h4>\n                        <Scope path=\"PersonalInformation\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Data de nascimento\" type=\"date\" name=\"dateBirth\" placeholder=\"Data de nascimento\" disabled/> : <Input label=\"Data de nascimento\" type=\"date\" name=\"dateBirth\" placeholder=\"Data de nascimento\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Estado civil\" name=\"maritalStatus\" id=\"maritalStatus\" placeholder=\"Sem informação\" disabled/> : <Select label=\"Estado civil\" name=\"maritalStatus\" id=\"maritalStatus\" options={[{id: \"Solteiro\", title: 'Solteiro'}, {id: \"Casado\", title: 'Casado'}, {id: \"Divorciado\", title: 'Divorciado'}]} placeholder=\"Selecione uma opção\" />\n                                    }  \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Peso\" type=\"Number\" max=\"400\" min=\"0\" step=\"0.1\" name=\"Weight\" placeholder=\"Peso em kg\" disabled/> : <Input label=\"Peso\" type=\"Number\" max=\"400\" min=\"0\" step=\"0.1\" name=\"Weight\" placeholder=\"Peso em kg\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Altura\" type=\"Number\" max=\"3.00\" min=\"0\" step=\"0.01\" name=\"height\" placeholder=\"Sem informação\" disabled /> : <Input label=\"Altura\" type=\"Number\" max=\"3.00\" min=\"0\" step=\"0.01\" name=\"height\" placeholder=\"Altura em metros\" />\n                                    }\n                                </div>               \n                            </div>\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Profissão\" type=\"text\" name=\"profession\" placeholder=\"Profissão\" disabled/> : <Input label=\"Profissão\" type=\"text\" name=\"profession\" placeholder=\"Profissão\" />\n                                    }\n                                    \n                                </div>  \n                                <div>\n                                    {\n                                        edit ? <Input label=\"Transito intestinal\" name=\"IntestinalTransit\" id=\"IntestinalTransit\"  placeholder=\"Sem informação\" disabled/> : <Select label=\"Transito intestinal\" name=\"IntestinalTransit\" id=\"IntestinalTransit\" options={[{id: \"1\", title: '1'}, {id: \"2\", title: '2'}, {id: \"3\", title: '3'}, {id: \"4\", title: '4'}, {id: \"5\", title: '5'}, {id: \"6\", title: '6'}, {id: '7', title: '7'}]} placeholder=\"Selecione uma opção\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input  label=\"Escala urinaria\" name=\"UrinaryStaining\" id=\"UrinaryStaining\" placeholder=\"Sem informação\" disabled/> : <Select  label=\"Escala urinaria\" name=\"UrinaryStaining\" id=\"UrinaryStaining\" options={[{id: \"1\", title: '1'}, {id: \"2\", title: '2'}, {id: \"3\", title: '3'}, {id: \"4\", title: '4'}, {id: \"5\", title: '5'}, {id: \"6\", title: '6'}, {id: '7', title: '7'}, {id: '8', title: '8'}]} placeholder=\"Selecione uma opção\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Genero fisiologico\" name=\"genre\" id=\"genre\" placeholder=\"Sem informação\"  disabled/> : <Select label=\"Genero fisiologico\" name=\"genre\" id=\"genre\" options={[{id: \"Mulher\", title: 'Mulher'}, {id: \"Homem\", title: 'Homem'}]} placeholder=\"Selecione uma opção\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Qualidade do sono\" name=\"sleepQuality\" id=\"sleepQuality\" placeholder=\"Sem informação\" disabled/> : <Select label=\"Qualidade do sono\" name=\"sleepQuality\" id=\"sleepQuality\" options={[{id: \"Ruim\", title: 'Ruim'}, {id: \"Bom\", title: 'Bom'}]} placeholder=\"Selecione uma opção\" />\n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Historico clínico\" id=\"clinicalHistory\" name=\"clinicalHistory\" rows=\"6\" cols=\"30\" disabled/> : <Textarea label=\"Historico clínico\" id=\"clinicalHistory\" name=\"clinicalHistory\" rows=\"6\" cols=\"30\" />\n                                    }\n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Objetivo\" id=\"objective\" name=\"objective\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Objetivo\" id=\"objective\" name=\"objective\" rows=\"6\" cols=\"30\" />\n                                    }\n                                </div>\n                            </div>\n                        </Scope>\n                        <hr/>\n\n                    <h4>2. SEMIOLOGIA NUTRICIONAL</h4>\n                    <Scope path=\"nutritionalSemiology\">\n                        <h5>2.1 ALTERAÇÃO DE PESO</h5>\n                        <Scope path=\"weightChanges\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Tipo\" name=\"kgChanges\" id=\"kgChanges\" placeholder=\"Sem informação\" disabled/> : <Select label=\"Tipo\" name=\"kgChanges\" id=\"kgChanges\" options={[{id: \"PerdaPeso\", title: 'Perda de Peso'}, {id: \"GanhoPeso\", title: 'Ganho de Peso'}]} placeholder=\"Selecione uma opção\" placeholder=\"Selecione uma opção\"/>\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Quantidade\" type=\"Number\" max=\"400\" step=\"0.1\" name=\"obsWeight\" placeholder=\"Sem informação\" disabled /> : <Input label=\"Quantidade\" type=\"Number\" max=\"400\" step=\"0.1\" name=\"obsWeight\" placeholder=\"Peso em kg\" />\n                                    }\n                                </div>               \n                            </div>\n                        </Scope>\n\n                        <h5>2.2 EXAME FÍSICO</h5>\n                        <Scope path=\"physicalExam\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Pele Ressecada\"  id=\"drySkin\" name=\"drySkin\" disabled /> : <Check label=\"Pele Ressecada\"  id=\"drySkin\" name=\"drySkin\" />\n                                    }\n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Check label=\"Umidade das mucosas\"  id=\"mucousMoisture\" name=\"mucousMoisture\" disabled /> : <Check label=\"Umidade das mucosas\"  id=\"mucousMoisture\" name=\"mucousMoisture\"/>\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Queda de cabelo\"  id=\"lossOfHair\" name=\"lossOfHair\" disabled /> : <Check label=\"Queda de cabelo\"  id=\"lossOfHair\" name=\"lossOfHair\"/>\n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Edema\"  id=\"edema\" name=\"edema\" disabled /> : <Check label=\"Edema\"  id=\"edema\" name=\"edema\"/>\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Fraqueza\" id=\"weakness\" name=\"weakness\" disabled/> : <Check label=\"Fraqueza\" id=\"weakness\" name=\"weakness\"/>\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Palidez conjutival\" defaultChecked=\"sim\" id=\"conjunctivalPallor\" name=\"conjunctivalPallor\" disabled /> : <Check label=\"Palidez conjutival\" defaultChecked=\"sim\" id=\"conjunctivalPallor\" name=\"conjunctivalPallor\"/>\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Unhas coiloníquas\" id=\"koilonychicNails\" name=\"koilonychicNails\" disabled /> : <Check label=\"Unhas coiloníquas\" id=\"koilonychicNails\" name=\"koilonychicNails\"/>\n                                    }\n                                    \n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Observação\" id=\"obsPhysicalExam\" name=\"obsPhysicalExam\" rows=\"6\" cols=\"30\" disabled/> : <Textarea label=\"Observação\" id=\"obsPhysicalExam\" name=\"obsPhysicalExam\" rows=\"6\" cols=\"30\"/>\n                                    }\n                                </div>\n                            </div>\n                        </Scope>\n\n                        <h5>2.3 ALTERAÇÃO NO APARELHO DIGESTIVO</h5>\n                        <Scope path=\"disgestiveSystem\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Dispepsia\" id=\"dyspepsia\" name=\"dyspepsia\" disabled /> : <Check label=\"Dispepsia\" id=\"dyspepsia\" name=\"dyspepsia\" />\n                                    }\n                                    \n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Check label=\"Dores estomacais\" id=\"stomachPains\" name=\"stomachPains\" disabled /> : <Check label=\"Dores estomacais\" id=\"stomachPains\" name=\"stomachPains\"/>\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Nauseas\" id=\"nausea\" name=\"nausea\" disabled /> : <Check label=\"Nauseas\" id=\"nausea\" name=\"nausea\"/>\n                                    }\n                                    \n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Check label=\"Vômitos\" id=\"vomiting\" name=\"vomiting\" disabled /> : <Check label=\"Vômitos\" id=\"vomiting\" name=\"vomiting\"/>\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Disfagia\" id=\"dysphagia\" name=\"dysphagia\" disabled /> : <Check label=\"Disfagia\" id=\"dysphagia\" name=\"dysphagia\"/>\n                                    }\n                                    \n                                </div>\n                            </div>\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Observação\" id=\"obsDisgestiveSystem\" name=\"obsDisgestiveSystem\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Observação\" id=\"obsDisgestiveSystem\" name=\"obsDisgestiveSystem\" rows=\"6\" cols=\"30\"/>\n                                    }\n                                    \n                                </div>\n                            </div>\n                        </Scope>\n    \n                        <h5>2.4 ALTERAÇÕES INTESTINAIS</h5>\n                        <Scope path=\"intestinalChanges\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Diarreia\" id=\"diarreia\" name=\"diarreia\" disabled/> : <Check label=\"Diarreia\" id=\"diarreia\" name=\"diarreia\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Constipação\" id=\"cold\" name=\"cold\" disabled/> : <Check label=\"Constipação\" id=\"cold\" name=\"cold\" />\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Observação\" id=\"obsIntestinalChanges\" name=\"obsIntestinalChanges\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Observação\" id=\"obsIntestinalChanges\" name=\"obsIntestinalChanges\" rows=\"6\" cols=\"30\" />\n                                    }\n                                    \n                                </div>\n                            </div>\n                        </Scope>\n                    </Scope>\n                        <hr/>\n\n                        <h4>3. CONSUNO DE ÁGUA</h4>\n                        <div>\n                            <div>\n                                {\n                                    edit ? <Textarea labe=\"Descrição\" id=\"waterConsumption\" name=\"waterConsumption\" rows=\"6\" cols=\"30\" disabled /> : <Textarea labe=\"Descrição\" id=\"waterConsumption\" name=\"waterConsumption\" rows=\"6\" cols=\"30\"/>\n                                }\n                            </div>\n                        </div>\n                        <hr/>\n        \n                        <h4>4. ALERGIAS E INTOLERÂNCIAS</h4>\n                        <Scope path=\"allergiesAndIntolerances\">\n                            <div>\n                                <div>\n                                {\n                                    edit ? <Textarea label=\"Alergia alimentar\" id=\"foodAllergy\" name=\"foodAllergy\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Alergia alimentar\" id=\"foodAllergy\" name=\"foodAllergy\" rows=\"6\" cols=\"30\" />\n                                }\n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Outras alergias\" id=\"otherAllergies\" name=\"otherAllergies\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Outras alergias\" id=\"otherAllergies\" name=\"otherAllergies\" rows=\"6\" cols=\"30\"/>\n                                    }\n                                    \n                                </div>\n        \n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Intolerâncias\" id=\"intolerances\" name=\"intolerances\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Intolerâncias\" id=\"intolerances\" name=\"intolerances\" rows=\"6\" cols=\"30\" />\n                                    }\n                                </div>\n                            </div>\n                        </Scope>\n                        <hr/>\n    \n                        <h4>5. USO DE MEDICAMENTOS/SUPLEMENTOS</h4>\n                        <hr/>\n    \n                        <h4>6. ATIVIDADE FÍSICA</h4>\n                        <Scope path=\"physicalActivity\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Pratica atividade Física\" id=\"physicalActivityYesNo\" name=\"physicalActivityYesNo\" disabled/> : <Check label=\"Pratica atividade Física\" id=\"physicalActivityYesNo\" name=\"physicalActivityYesNo\"/>\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Discrição da frenquência\" id=\"frequencyActivity\" name=\"frequencyActivity\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Discrição da frenquência\" id=\"frequencyActivity\" name=\"frequencyActivity\" rows=\"6\" cols=\"30\" />\n                                    }\n                                </div>\n                            </div>\n                        </Scope>\n                        <hr/>\n    \n                        <h4>7. BEBIDA ALCOÓLICA</h4>\n                        <Scope path=\"alcoholicBeverage\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Check label=\"Ingere bebida alcoolica\" id=\"yesNoBeverage\" name=\"yesNoBeverage\" disabled/> : <Check label=\"Ingere bebida alcoolica\" id=\"yesNoBeverage\" name=\"yesNoBeverage\"/>\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Textarea label=\"Discrição da frenquência\" id=\"frequencyBeverage\" name=\"frequencyBeverage\" rows=\"6\" cols=\"30\" disabled /> : <Textarea label=\"Discrição da frenquência\" id=\"frequencyBeverage\" name=\"frequencyBeverage\" rows=\"6\" cols=\"30\" />\n                                    }\n                                </div>\n                            </div>\n                        </Scope>\n                        <hr/>\n    \n                        <h4>8. TABAGISMO</h4>\n                        <div>\n                            <div>\n                                    {\n                                        edit ? <Check label=\"Fumante\" id=\"smoking\" name=\"smoking\" disabled /> : <Check label=\"Fumante\" id=\"smoking\" name=\"smoking\"/>\n                                    }\n                            </div>\n                        </div>\n                        <hr/>\n    \n                        <h4>9. HORARIOS</h4>\n                        <Scope path=\"schedules\">\n                            <div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Acorda às\" type=\"time\" name=\"wakeUp\" disabled/> : <Input label=\"Acorda às\" type=\"time\" name=\"wakeUp\" />\n                                    }\n                                    \n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Dorme às\" type=\"time\" name=\"sleeps\" disabled/> : <Input label=\"Dorme às\" type=\"time\" name=\"sleeps\" />\n                                    }\n                                </div>\n                                <div>\n                                    {\n                                        edit ? <Input label=\"Atividade física às\" type=\"time\" name=\"physicalActivity\" disabled /> : <Input label=\"Atividade física às\" type=\"time\" name=\"physicalActivity\"  />\n                                    }\n                                </div> \n                            </div>\n                        </Scope>\n                        <hr/>\n    \n                        <h4>10. AVALIAÇÃO DIETÉTICA</h4>\n    \n                        <h5>10.1. PREFERÊNCIAS E AVERSÕES</h5>\n                        <hr/>\n\n                        {\n                            edit ? <button className=\"Salve\" disabled>Atualizar dados</button> : <button className=\"Salve\" type=\"submit\" onSubmit={e => { e.preventDefault()}} >Atualizar dados</button>\n                        }                            \n                            \n                    </Form>\n                </MedicalInfo>\n    \n            </Container>\n        )\n    }\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosListar/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/index.js",["295"],"import React, {useContext, useState} from 'react';\n\nimport { Container } from './styles'\nimport { Form, Input } from '@rocketseat/unform'\nimport * as Yup from 'yup'\nimport {toast} from 'react-toastify'\n\nimport {AiFillEdit} from 'react-icons/ai'\n\nimport {AuthContext} from '../../context/AuthContext'\nimport Tooltip from '../../components/tooltip/index'\nimport api from '../../services/api'\nimport AvatarInput from './AvatarInput'\n\nconst schema = Yup.object().shape({\n\n    name: Yup.string()\n        .required(\"O nome é obrigatório!\"),\n\n    email: Yup.string()\n        .email(\"Insira um e-mail válido!\")\n        .required(\"O e-mail é obrigatório!\"),\n\n    phone: Yup.string()\n        .required(\"Número de telefone é obrigatório!\"),\n\n    password: Yup.string()\n        .required(\"A senha é obrigatória!\"),\n\n    NewPassword: Yup.string()\n        .required(\"Campo obrigatório!\"),\n\n    ConfirmeNewpassword: Yup.string()\n        .required(\"Campo obrigatório!\"),\n})\n\nexport default function Profile(){\n\n    const { user } = useContext(AuthContext)\n    const { update } = useContext(AuthContext)\n\n    const [edit, setEdit] = useState(true);\n\n    async function handlSubmit(data) {\n        await api.put(`user/userUp/${user._id}` ,{\n            name: data.name,\n            email: data.email,\n            phone: data.phone\n        }).then(() => {\n            update({\n                email: data.email,\n                password: data.password\n            })\n            toast.success('Perfil atualizado.')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n\n    }\n\n    async function onChange(event){\n        event.target.value = event.target.value\n            .replace(/\\D/g,'')\n            .replace(/(\\d{0})(\\d)/, '$1($2')\n            .replace(/(\\d{2})(\\d)/, '$1) $2 ')\n            .replace(/(\\d{5})(\\d)/, '$1-$2')\n    }\n\n    async function handleClick(){\n        setEdit(false == edit)\n        if(edit){\n            toast.info('Campos de edição habilitado')\n        } else {\n            toast.info('Campos de edição desabilitado')\n\n        }\n    }\n\n\n    return (\n        <>\n            <Container>\n                <div>\n                    <h1>Editar informações</h1>\n                    <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos de edição\"/></button>\n                </div>\n                <Form schema={schema} initialData={user} onSubmit={handlSubmit}>\n\n                    <AvatarInput name=\"avatar_id\" />\n\n                    {\n                        edit ? <Input label=\"Nome e sobrenome\" name=\"name\" placeholder=\"Nome e sobrenome\" disabled/> : <Input label=\"Nome e sobrenome\" name=\"name\" placeholder=\"Nome e sobrenome\"/>\n                    }\n                    {\n                        edit ? <Input label=\"E-mail\" type=\"email\" name=\"email\" placeholder=\"Nome e sobrenome\" disabled/> :<Input label=\"E-mail\" type=\"email\" name=\"email\" placeholder=\"Nome e sobrenome\"/>\n                    }\n                    {\n                        edit ? <Input label=\"Telefone\" onChange={onChange} name=\"phone\" maxLength=\"16\" type=\"text\" disabled/> : <Input label=\"Telefone\" onChange={onChange} maxLength=\"16\" type=\"text\" name=\"phone\"/>\n                    }\n                    <hr/>\n                    <Input label=\"Nova Senha\" type=\"password\" name=\"NewPassword\" maxLength=\"12\" minLength=\"8\" placeholder=\"Mínimo 8 caracteres e máximo  12 caracters\" />\n                    <Input label=\"Confirme nova senha\" type=\"password\" name=\"ConfirmeNewpassword\" minLength=\"8\" maxLength=\"12\" placeholder=\"Mesma senha do campo anterior\" />\n                    <hr/>\n                    <Input label=\"Senha atual\" type=\"password\" name=\"password\" maxLength=\"12\" minLength=\"8\" placeholder=\"Necessario para validar as modificações\" />\n                    {\n                        edit ? <button disabled>Desabilitado</button> : <button type=\"submit\">Atualizar perfil</button>\n                    }\n                </Form>\n            </Container>\n        </>\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosRegistrar/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/LandingPage/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosListar/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingUp/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/SingIn/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ForgotPassword/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesListagem/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesRegister/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ReceitasPublicas/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/PacientesEdit/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosPublicos/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosEdit/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/ArtigosListagem/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/AgendamentosRegistrar/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/carousel/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/tooltip/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/auth/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/default/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/AvatarInput/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/tooltip/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/auth/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/_layouts/default/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/Profile/AvatarInput/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/footer/index.js",["296","297","298"],"import React from 'react'\nimport {  AiFillFacebook, AiFillInstagram,  AiOutlineWhatsApp } from \"react-icons/ai\";\n\nimport {Container} from './styles.js'\n\nexport default function Footer(){\n    return (\n            <Container>\n                <nav>\n                    <h3>KEEP IN TOUCH</h3>\n                    <div className=\"icons\">\n                        <a href=\"https://api.whatsapp.com/send?phone=+558494794472\" target=\"_blank\">\n                            <AiOutlineWhatsApp className=\"icon\" size={35}/>\n                        </a>\n                        <a href=\"https://www.instagram.com/carolbl_/?hl=pt-br\" target=\"_blank\">\n                            <AiFillInstagram className=\"icon\" size={35} />\n                        </a>\n                        <a href=\"https://www.facebook.com/caroline.bernardinol\" target=\"_blank\">\n                            <AiFillFacebook className=\"icon\" size={35}/>\n                        </a>\n                    </div>\n                </nav>\n            </Container>\n\n    )\n}\n","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerAuth/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerDefault/index.js",["299","300"],"import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Content, Profile } from \"./styles.js\"\nimport logo from '../../assets/logo.svg'\nimport  history  from '../../services/history'\n\nimport { Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Nav } from 'reactstrap';\n\nimport {AuthContext} from '../../context/AuthContext'\n\nexport default function HeaderDefault(){\n    async function handleClick(){\n\n        try {\n            localStorage.removeItem('@CarolNutri:token')\n            localStorage.removeItem('@CarolNutri:user')\n   \n            history.go('/signin')\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const toggle = () => setDropdownOpen(!dropdownOpen);\n    const { user } = useContext(AuthContext)\n    return (\n        <Container>\n            <Content>\n                <nav>\n                <Link to=\"/dashboard\" title=\"Ir para Dashboard\">\n                    <img src={logo} alt=\"Carol Nutri\" />\n                </Link>\n                </nav>\n\n                <aside>\n                    <Profile>\n                        <Nav pills>\n                            <Dropdown nav isOpen={dropdownOpen} toggle={toggle}>\n                                <DropdownToggle nav caret>\n                                    <a>{user.name}</a>\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    <Link to=\"/perfil\" title=\"Ir para seu perfil\">\n                                        <DropdownItem>\n                                            Perfil\n                                        </DropdownItem>\n                                    </Link>\n                                    <DropdownItem divider />\n                                    <DropdownItem onClick={handleClick}>\n                                        Logout\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                            </Nav>\n                            <img src=\"https://image.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg\"/>\n                    </Profile>\n                </aside>\n            </Content>\n        </Container>\n    )\n}\n","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/sideBar/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/sideBar/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerDefault/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/headerAuth/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/components/footer/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/artigosRegister/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/artigosRegister/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/dashboard/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasEdit/index.js",["301","302","303","304","305"],"import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport { FiChevronLeft,  FiChevronRight } from 'react-icons/fi'\nimport { AiOutlineClose, AiFillEdit } from \"react-icons/ai\";\nimport { useHistory } from 'react-router-dom'\nimport { Form, Input, Textarea } from '@rocketseat/unform'\nimport * as Yup from 'yup'\n\nimport api from '../../services/api'\nimport {Return, UsuarioInfo, Container, Editor} from './styles'\nimport Tooltip from '../../components/tooltip/index'\n\nexport default function Receita(){\n\n    var history = useHistory()\n\n    const { params } = useRouteMatch();\n\n    const [Receita, setReceita] = useState([]);\n    const [edit, setEdit] = useState(true);\n\n    useEffect(async () => {\n        api.get(`receitas/list/${params.receita}`).then((response) => {\n            setReceita(response.data)\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    },[params.Receita])\n\n    async function handClick(){\n        console.log('entrou na função')\n        await api.delete(`receitas/delete/${params.receita}` ,{\n        }).then(() => {\n            toast.success('Receita excluída!')\n            history.push('/receitas')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n    }\n\n    const schema = Yup.object().shape({\n        image: Yup.string()\n            .required(\"Titulo é obrigatório!\"),\n\n        title: Yup.string()\n            .required(\"Titulo é obrigatório!\"),\n    \n        description: Yup.string()\n            .required(\"Descrição é obrigatória!\"),\n    \n        link: Yup.string()\n            .required(\"Link é um campo obrigatório!\"),\n    \n    })\n\n    async function handlSubmit(data) {\n        console.log(data)\n        \n        await api.put(`receitas/edit/${Receita._id}` ,{ \n            title: data.title,\n            description: data.description,\n            link: data.link,\n         }).then(async () => {\n             toast.success('Receita atualizado')\n             history.push('/receitas')\n        }).catch((error) => {\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        })\n\n    }\n\n    async function handleClick(){\n        setEdit(false == edit)\n        if(edit){\n            toast.info('Campos de edição habilitado')\n        } else {\n            toast.info('Campos de edição desabilitado')\n        }\n    }\n\n    return (\n    <Container>\n        <Return>\n            <Link to=\"/receitas\">\n                <FiChevronLeft/>\n                Voltar\n            </Link>\n        </Return>\n\n        <UsuarioInfo>\n            <h1>Informações da receita</h1>\n            <header>\n                <img src={Receita.image}/>\n                <div>\n                    <strong>\n                        {Receita.title}\n                    </strong>\n                    <p>\n                        {Receita.description}\n                    </p>\n                </div>\n            </header>\n            <div className=\"botoes\">\n                <a href={Receita.link} target=\"_blank\">ver<FiChevronRight/></a>\n                <button onClick={handClick} type=\"button\">Excluir <AiOutlineClose size={20} /></button>\n            </div>\n            <hr/>\n        </UsuarioInfo>\n        <Editor>\n            <div>\n                <h2>Editar receita</h2>\n                <button className=\"Edit\" onClick={handleClick}><AiFillEdit size={20}/><Tooltip texto=\"Habilitar campos para edição\"/></button>\n            </div>\n\n            <Form schema={schema} onSubmit={handlSubmit} initialData={Receita}>\n                {\n                    edit ? <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" disabled /> : <Input label=\"Link do documento\" name=\"link\" placeholder=\"Link do documento do drive\" />\n                }\n                {\n                    edit ? <Input label=\"Titulo da receita\"  name=\"title\" placeholder=\"Ex.: Bolo de chocolate sem açucar\" disabled/> : <Input label=\"Titulo da receita\"  name=\"title\" placeholder=\"Ex.: Fungos no alimentos\"/>\n                }\n                {\n                    edit ?  <Textarea rows=\"4\" label=\"Descrição\" name=\"description\" placeholder=\"Informe um breve descrição sobre a receita\" disabled/> : <Textarea rows=\"4\" label=\"Descrição\" name=\"description\" placeholder=\"Informe um breve descrição sobre a receita\" />\n                }\n                {\n                    edit ? <button disabled>Desabilitado</button> : <button onSubmit={e => { e.preventDefault()}} type=\"submit\" >Atualizar dados</button>\n                }\n            </Form>\n        </Editor>\n    </Container>\n    )\n}","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasEdit/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasListagem/index.js",["306","307","308","309"],"import React, { useState, useRef, useEffect } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport {toast} from 'react-toastify'\nimport {FiChevronRight} from 'react-icons/fi'\nimport {AiFillPlusCircle, AiOutlineRedo} from 'react-icons/ai'\n\nimport {Container, Formulario, Receita, Loading} from './styles'\nimport Logo from '../../assets/logo-branca.svg'\nimport api from \"../../services/api\"\nimport Tooltip from '../../components/tooltip/index'\nimport ReactLoading from 'react-loading'\n\nexport default function Receitas(){\n    const [receitas, setReceitas] = useState([]);\n    const [busca, setBusca] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    //Objeto mutavel\n    const cb = useRef() //serve para ser a causa de disparo do usuEffect quando  este Component é gerado, ou seja, useEffect será chamado quando o usuário entrar nesta página.\n\n    //função que é chamada por uma causa. Sempre que cb mudar, está função será chamada\n    useEffect(async () => {\n        setLoading(true)\n        api.get('receitas/list').then((response) => {\n            setReceitas(response.data.docs)\n            setLoading(false)\n        }).catch((error) => {\n            setLoading(false)\n            let erro = JSON.parse(error.request.response)\n            toast.error(erro.error)\n        }) \n    },[cb])\n\n    function onChange(event) {\n        setBusca(event.target.value)\n    }\n\n    function handleClick(){\n        setLoading(true)\n        if(busca == ''|| busca == undefined){\n            api.get('receitas/list').then((response) => {\n                setReceitas(response.data?.docs)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        } else {\n            api.get(`receitas/listName/${busca}`).then((response) => {\n                setReceitas(response?.data)\n                setLoading(false)\n                toast.success('Lista atualizada.')\n            }).catch((error) => {\n                let erro = JSON.parse(error.request?.response)\n                toast.error(erro.error)\n                setLoading(false)\n            }) \n        }\n    }\n\n    if (loading){\n        return <><Loading><h1>Carregando</h1><ReactLoading  color=\"#fff\" /></Loading></>\n    }\n\n    return(\n        <>\n            <Container>\n                <img src={Logo} alt=\"Carol Nutri\"/>\n                <h1>Explore a lista de receitas.</h1>\n            </Container>\n\n            <Formulario>\n                <input value={busca} onChange={onChange} name=\"pesquisa\" type=\"text\" placeholder=\"Informe o nome do usuário\"/>\n                <button onClick={handleClick} type=\"button\">Atualizar lista <AiOutlineRedo size={20} /></button>\n                <Link>\n                    <div>\n                        <Link to=\"/registrar-receita\">\n                            <AiFillPlusCircle size={60}/>\n                            <Tooltip texto=\"Cadastrar novo usuário.\"/>\n                        </Link>\n                    </div>\n                </Link>\n            </Formulario>\n\n            {receitas.map(receita => (\n                \n                <Receita>\n                    <Link key={String(receita._id)}  to={`/receita/${receita._id}`}>\n                        <img src={receita.image}/>\n                        <div>\n                            <div className=\"conteudo\">\n                                <strong>{receita.title}</strong>\n                                <p>{receita.description}</p>\n                            </div>\n                        </div>\n\n                        <FiChevronRight size={20}/>\n                    </Link>\n                </Receita>\n            ))}\n        </>\n    )\n}\n","/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasListagem/styles.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasRegister/index.js",[],"/home/mateus/Imagens/sistema-carol-nutri/front-end/src/pages/receitasRegister/styles.js",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":11,"column":8,"nodeType":"316","messageId":"317","endLine":11,"endColumn":9,"fix":"318"},{"ruleId":"319","severity":1,"message":"320","line":13,"column":13,"nodeType":"321","endLine":13,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":1,"column":17,"nodeType":"324","messageId":"325","endLine":1,"endColumn":27},{"ruleId":"326","severity":1,"message":"327","line":23,"column":15,"nodeType":"328","endLine":33,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":41,"column":18,"nodeType":"331","messageId":"332","endLine":41,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":41,"column":32,"nodeType":"331","messageId":"332","endLine":41,"endColumn":34},{"ruleId":"333","severity":1,"message":"334","line":92,"column":25,"nodeType":"321","endLine":92,"endColumn":129},{"ruleId":"326","severity":1,"message":"327","line":23,"column":15,"nodeType":"328","endLine":33,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":41,"column":18,"nodeType":"331","messageId":"332","endLine":41,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":41,"column":32,"nodeType":"331","messageId":"332","endLine":41,"endColumn":34},{"ruleId":"335","severity":1,"message":"336","line":91,"column":21,"nodeType":"321","endLine":91,"endColumn":87},{"ruleId":"333","severity":1,"message":"334","line":92,"column":25,"nodeType":"321","endLine":92,"endColumn":51},{"ruleId":"326","severity":1,"message":"327","line":23,"column":15,"nodeType":"328","endLine":33,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":41,"column":18,"nodeType":"331","messageId":"332","endLine":41,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":41,"column":32,"nodeType":"331","messageId":"332","endLine":41,"endColumn":34},{"ruleId":"326","severity":1,"message":"327","line":24,"column":15,"nodeType":"328","endLine":31,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":76,"column":23,"nodeType":"331","messageId":"332","endLine":76,"endColumn":25},{"ruleId":"335","severity":1,"message":"336","line":106,"column":17,"nodeType":"321","endLine":106,"endColumn":55},{"ruleId":"326","severity":1,"message":"327","line":25,"column":15,"nodeType":"328","endLine":35,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":43,"column":18,"nodeType":"331","messageId":"332","endLine":43,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":43,"column":32,"nodeType":"331","messageId":"332","endLine":43,"endColumn":34},{"ruleId":"335","severity":1,"message":"336","line":93,"column":21,"nodeType":"321","endLine":93,"endColumn":85},{"ruleId":"326","severity":1,"message":"327","line":24,"column":15,"nodeType":"328","endLine":39,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":95,"column":23,"nodeType":"331","messageId":"332","endLine":95,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":115,"column":25,"nodeType":"321","endLine":115,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":189,"column":217,"nodeType":"339","endLine":189,"endColumn":250},{"ruleId":"333","severity":1,"message":"334","line":371,"column":25,"nodeType":"321","endLine":371,"endColumn":129},{"ruleId":"337","severity":1,"message":"338","line":469,"column":326,"nodeType":"339","endLine":469,"endColumn":359},{"ruleId":"329","severity":1,"message":"330","line":71,"column":23,"nodeType":"331","messageId":"332","endLine":71,"endColumn":25},{"ruleId":"335","severity":1,"message":"336","line":12,"column":25,"nodeType":"321","endLine":12,"endColumn":101},{"ruleId":"335","severity":1,"message":"336","line":15,"column":25,"nodeType":"321","endLine":15,"endColumn":96},{"ruleId":"335","severity":1,"message":"336","line":18,"column":25,"nodeType":"321","endLine":18,"endColumn":97},{"ruleId":"340","severity":1,"message":"341","line":43,"column":37,"nodeType":"321","endLine":43,"endColumn":40},{"ruleId":"333","severity":1,"message":"334","line":58,"column":29,"nodeType":"321","endLine":58,"endColumn":133},{"ruleId":"326","severity":1,"message":"327","line":24,"column":15,"nodeType":"328","endLine":31,"endColumn":6},{"ruleId":"326","severity":1,"message":"342","line":31,"column":7,"nodeType":"343","endLine":31,"endColumn":23,"suggestions":"344"},{"ruleId":"329","severity":1,"message":"330","line":78,"column":23,"nodeType":"331","messageId":"332","endLine":78,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":98,"column":17,"nodeType":"321","endLine":98,"endColumn":43},{"ruleId":"335","severity":1,"message":"336","line":109,"column":17,"nodeType":"321","endLine":109,"endColumn":56},{"ruleId":"326","severity":1,"message":"327","line":23,"column":15,"nodeType":"328","endLine":33,"endColumn":6},{"ruleId":"329","severity":1,"message":"330","line":41,"column":18,"nodeType":"331","messageId":"332","endLine":41,"endColumn":20},{"ruleId":"329","severity":1,"message":"330","line":41,"column":32,"nodeType":"331","messageId":"332","endLine":41,"endColumn":34},{"ruleId":"333","severity":1,"message":"334","line":92,"column":25,"nodeType":"321","endLine":92,"endColumn":51},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"rest-spread-spacing","Unexpected whitespace after rest property operator.","ExperimentalRestProperty","unexpectedWhitespace",{"range":"347","text":"348"},"react/jsx-pascal-case","Imported JSX component Carousel_ must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'params.receita'. Either include it or remove the dependency array.","ArrayExpression",["349"],"no-global-assign","no-unsafe-negation",[346,347],"",{"desc":"350","fix":"351"},"Update the dependencies array to be: [params.Receita, params.receita]",{"range":"352","text":"353"},[1039,1055],"[params.Receita, params.receita]"]